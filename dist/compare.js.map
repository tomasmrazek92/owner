{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/swipers.js", "../src/compare.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "export const createSwiper = (componentSelector, swiperSelector, classSelector, options) => {\n  // Globals\n  const arrows = '.swiper_arrow';\n  const pagination = '.swiper-navigation';\n\n  // For Each\n  $(componentSelector).each(function () {\n    // Tag Instance\n    let index = $(this).index();\n    let instanceClass = `${classSelector}_${index}`;\n    $(this).find(swiperSelector).addClass(instanceClass);\n    $(this).find(arrows).addClass(instanceClass);\n    $(this).find(pagination).addClass(instanceClass);\n\n    // Build Options\n    let swiperOptions = Object.assign({}, options, {\n      speed: 750,\n      threshold: 20,\n      navigation: {\n        prevEl: `${arrows}.prev.${instanceClass}`,\n        nextEl: `${arrows}.next.${instanceClass}`,\n      },\n      pagination: {\n        el: `${pagination}.${instanceClass}`,\n        type: 'bullets',\n        bulletActiveClass: 'w-active',\n        bulletClass: 'w-slider-dot',\n        clickable: true,\n      },\n    });\n\n    // Check if autoplay is in options\n    const hasAutoplay = options && options.autoplay;\n\n    // If autoplay exists, remove it from initial options\n    // We'll add it back when the swiper is in view\n    if (hasAutoplay) {\n      const autoplaySettings = { ...options.autoplay };\n      delete swiperOptions.autoplay;\n    }\n\n    // Update Options\n    for (let key in options) {\n      if (key in swiperOptions && key !== 'autoplay') {\n        swiperOptions[key] = options[key];\n      }\n    }\n\n    // Init Slider\n    let swiper = new Swiper(`${swiperSelector}.${instanceClass}`, swiperOptions);\n\n    // Handle autoplay on scroll into view\n    if (hasAutoplay) {\n      const swiperElement = $(this).find(`${swiperSelector}.${instanceClass}`)[0];\n\n      const observer = new IntersectionObserver(\n        (entries) => {\n          entries.forEach((entry) => {\n            if (entry.isIntersecting) {\n              // Swiper is in view, start autoplay\n              swiper.params.autoplay = options.autoplay;\n              swiper.autoplay.start();\n            } else {\n              // Swiper is out of view, pause autoplay\n              swiper.autoplay.stop();\n            }\n          });\n        },\n        { threshold: 0.1 }\n      ); // Trigger when at least 10% of the swiper is visible\n\n      // Start observing the swiper\n      observer.observe(swiperElement);\n    }\n\n    // Push to Global for possible references\n    // store swiper instance in object using classSelector as key\n    swipers[classSelector] = swipers[classSelector] || {};\n    swipers[classSelector][index] = swiper;\n  });\n};\n", "import { createSwiper } from '$utils/swipers';\n\n$(document).ready(function () {\n  // Top rating\n  $('[data-rating]').each(function () {\n    let rating = $(this).attr('data-rating');\n    let heightPercentage = rating === '?' ? '100%' : (rating / 5) * 100 + '%';\n\n    let tl = gsap.timeline({ delay: 0.5 });\n\n    tl.to($(this), {\n      height: heightPercentage,\n      duration: 0.5,\n      ease: 'power2.out',\n    });\n    tl.to($(this).find('[data-nest]'), {\n      opacity: 1,\n    });\n  });\n\n  // Reviews\n  $('[data-review]').each(function () {\n    let element = $(this);\n    let counterElement = element.closest('[data-review-row]').find('[data-review-counter]');\n    let scoreText = counterElement.text();\n\n    // Check if score is \"?\"\n    if (scoreText === '?') {\n      // Just reveal the \"?\" without animation\n      gsap.to(counterElement, {\n        opacity: 1,\n        duration: 0.5,\n      });\n      return; // Skip the rest of the animation\n    }\n\n    // Continue with normal animation for numeric scores\n    let score = parseFloat(scoreText);\n    let percentageScore = score * 20;\n    let counter = { val: 0 };\n\n    // Set initial width to 0\n    element.css('width', '0%');\n\n    let tl = gsap.timeline({\n      scrollTrigger: {\n        trigger: $(this).closest('[data-review-comp]'),\n        start: 'center bottom',\n      },\n    });\n\n    // Animate both width and counter\n    tl.to(counter, {\n      val: score,\n      duration: 1,\n      onStart: () => {\n        gsap.to(counterElement, { opacity: 1 });\n      },\n      onUpdate: function () {\n        counterElement.text(counter.val.toFixed(1));\n      },\n      ease: 'power2.out',\n    });\n\n    tl.to(\n      element,\n      {\n        width: percentageScore + '%',\n        duration: 1,\n        ease: 'power2.out',\n      },\n      '<'\n    );\n  });\n\n  createSwiper('.section_comp-reviews', '.comp-reviews_wrap', 'testimonials-2', {\n    slidesPerView: 1,\n    speed: 1200,\n    spaceBetween: 8,\n    loop: true,\n    pagination: {\n      el: '.swiper-navigation.cc-testimonials2',\n      type: 'bullets',\n      bulletActiveClass: 'cc-active',\n      bulletClass: 'swiper-bullet',\n      clickable: true,\n      renderBullet: function (index, className) {\n        return '<span class=\"' + className + '\"><span></span></span>';\n      },\n    },\n  });\n});\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,iCAAsB,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACAtF,MAAM,eAAe,CAAC,mBAAmB,gBAAgB,eAAe,YAAY;AAEzF,UAAM,SAAS;AACf,UAAM,aAAa;AAGnB,MAAE,iBAAiB,EAAE,KAAK,WAAY;AAEpC,UAAI,QAAQ,EAAE,IAAI,EAAE,MAAM;AAC1B,UAAI,gBAAgB,GAAG,iBAAiB;AACxC,QAAE,IAAI,EAAE,KAAK,cAAc,EAAE,SAAS,aAAa;AACnD,QAAE,IAAI,EAAE,KAAK,MAAM,EAAE,SAAS,aAAa;AAC3C,QAAE,IAAI,EAAE,KAAK,UAAU,EAAE,SAAS,aAAa;AAG/C,UAAI,gBAAgB,OAAO,OAAO,CAAC,GAAG,SAAS;AAAA,QAC7C,OAAO;AAAA,QACP,WAAW;AAAA,QACX,YAAY;AAAA,UACV,QAAQ,GAAG,eAAe;AAAA,UAC1B,QAAQ,GAAG,eAAe;AAAA,QAC5B;AAAA,QACA,YAAY;AAAA,UACV,IAAI,GAAG,cAAc;AAAA,UACrB,MAAM;AAAA,UACN,mBAAmB;AAAA,UACnB,aAAa;AAAA,UACb,WAAW;AAAA,QACb;AAAA,MACF,CAAC;AAGD,YAAM,cAAc,WAAW,QAAQ;AAIvC,UAAI,aAAa;AACf,cAAM,mBAAmB,EAAE,GAAG,QAAQ,SAAS;AAC/C,eAAO,cAAc;AAAA,MACvB;AAGA,eAAS,OAAO,SAAS;AACvB,YAAI,OAAO,iBAAiB,QAAQ,YAAY;AAC9C,wBAAc,GAAG,IAAI,QAAQ,GAAG;AAAA,QAClC;AAAA,MACF;AAGA,UAAI,SAAS,IAAI,OAAO,GAAG,kBAAkB,iBAAiB,aAAa;AAG3E,UAAI,aAAa;AACf,cAAM,gBAAgB,EAAE,IAAI,EAAE,KAAK,GAAG,kBAAkB,eAAe,EAAE,CAAC;AAE1E,cAAM,WAAW,IAAI;AAAA,UACnB,CAAC,YAAY;AACX,oBAAQ,QAAQ,CAAC,UAAU;AACzB,kBAAI,MAAM,gBAAgB;AAExB,uBAAO,OAAO,WAAW,QAAQ;AACjC,uBAAO,SAAS,MAAM;AAAA,cACxB,OAAO;AAEL,uBAAO,SAAS,KAAK;AAAA,cACvB;AAAA,YACF,CAAC;AAAA,UACH;AAAA,UACA,EAAE,WAAW,IAAI;AAAA,QACnB;AAGA,iBAAS,QAAQ,aAAa;AAAA,MAChC;AAIA,cAAQ,aAAa,IAAI,QAAQ,aAAa,KAAK,CAAC;AACpD,cAAQ,aAAa,EAAE,KAAK,IAAI;AAAA,IAClC,CAAC;AAAA,EACH;;;AC9EA,IAAE,QAAQ,EAAE,MAAM,WAAY;AAE5B,MAAE,eAAe,EAAE,KAAK,WAAY;AAClC,UAAI,SAAS,EAAE,IAAI,EAAE,KAAK,aAAa;AACvC,UAAI,mBAAmB,WAAW,MAAM,SAAU,SAAS,IAAK,MAAM;AAEtE,UAAI,KAAK,KAAK,SAAS,EAAE,OAAO,IAAI,CAAC;AAErC,SAAG,GAAG,EAAE,IAAI,GAAG;AAAA,QACb,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,MAAM;AAAA,MACR,CAAC;AACD,SAAG,GAAG,EAAE,IAAI,EAAE,KAAK,aAAa,GAAG;AAAA,QACjC,SAAS;AAAA,MACX,CAAC;AAAA,IACH,CAAC;AAGD,MAAE,eAAe,EAAE,KAAK,WAAY;AAClC,UAAI,UAAU,EAAE,IAAI;AACpB,UAAI,iBAAiB,QAAQ,QAAQ,mBAAmB,EAAE,KAAK,uBAAuB;AACtF,UAAI,YAAY,eAAe,KAAK;AAGpC,UAAI,cAAc,KAAK;AAErB,aAAK,GAAG,gBAAgB;AAAA,UACtB,SAAS;AAAA,UACT,UAAU;AAAA,QACZ,CAAC;AACD;AAAA,MACF;AAGA,UAAI,QAAQ,WAAW,SAAS;AAChC,UAAI,kBAAkB,QAAQ;AAC9B,UAAI,UAAU,EAAE,KAAK,EAAE;AAGvB,cAAQ,IAAI,SAAS,IAAI;AAEzB,UAAI,KAAK,KAAK,SAAS;AAAA,QACrB,eAAe;AAAA,UACb,SAAS,EAAE,IAAI,EAAE,QAAQ,oBAAoB;AAAA,UAC7C,OAAO;AAAA,QACT;AAAA,MACF,CAAC;AAGD,SAAG,GAAG,SAAS;AAAA,QACb,KAAK;AAAA,QACL,UAAU;AAAA,QACV,SAAS,MAAM;AACb,eAAK,GAAG,gBAAgB,EAAE,SAAS,EAAE,CAAC;AAAA,QACxC;AAAA,QACA,UAAU,WAAY;AACpB,yBAAe,KAAK,QAAQ,IAAI,QAAQ,CAAC,CAAC;AAAA,QAC5C;AAAA,QACA,MAAM;AAAA,MACR,CAAC;AAED,SAAG;AAAA,QACD;AAAA,QACA;AAAA,UACE,OAAO,kBAAkB;AAAA,UACzB,UAAU;AAAA,UACV,MAAM;AAAA,QACR;AAAA,QACA;AAAA,MACF;AAAA,IACF,CAAC;AAED,iBAAa,yBAAyB,sBAAsB,kBAAkB;AAAA,MAC5E,eAAe;AAAA,MACf,OAAO;AAAA,MACP,cAAc;AAAA,MACd,MAAM;AAAA,MACN,YAAY;AAAA,QACV,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,mBAAmB;AAAA,QACnB,aAAa;AAAA,QACb,WAAW;AAAA,QACX,cAAc,SAAU,OAAO,WAAW;AACxC,iBAAO,kBAAkB,YAAY;AAAA,QACvC;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH,CAAC;",
  "names": []
}
