{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/googlePlace.js", "../src/utils/localStorage.js", "../src/index.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "const setInputElementValue = (elementName, value) => {\n  $(`input[name=${elementName}]`).val(value);\n};\n\nconst setAddressComponents = (googlePlace, componentForm) => {\n  let route = '';\n  let streetNumber = '';\n\n  googlePlace.address_components.forEach((component) => {\n    const addressType = component.types[0];\n    const type = componentForm.address_components[addressType];\n\n    if (type) {\n      const val = component[type];\n      if (addressType === 'route') route = val;\n      else if (addressType === 'street_number') streetNumber = val;\n      else setInputElementValue(addressType, val);\n    }\n  });\n\n  setInputElementValue('restaurant-address', `${streetNumber} ${route}`);\n};\n\nconst setTypes = (googlePlace) => {\n  if (!googlePlace.types) return;\n  const typesAsString = googlePlace.types.join(', ');\n  setInputElementValue('place_types', typesAsString);\n};\n\nconst setOtherComponents = (googlePlace, componentForm) => {\n  Object.keys(componentForm).forEach((key) => {\n    if (key === 'address_components') return;\n    const value = googlePlace[key];\n    if (value) setInputElementValue(key, value);\n  });\n};\n\nexport const setGooglePlaceDataToForm = (googlePlace) => {\n  if (!googlePlace) return;\n\n  const componentForm = {\n    name: '',\n    international_phone_number: '',\n    website: '',\n    place_id: '',\n    rating: '',\n    user_ratings_total: '',\n    address_components: {\n      street_number: 'short_name',\n      route: 'long_name',\n      locality: 'long_name',\n      administrative_area_level_1: 'short_name',\n      country: 'short_name',\n      postal_code: 'short_name',\n    },\n  };\n\n  setAddressComponents(googlePlace, componentForm);\n  setTypes(googlePlace);\n  setOtherComponents(googlePlace, componentForm);\n};\n", "export const getItem = (key) => {\n    const value = localStorage.getItem(key);\n    return value ? JSON.parse(value) : null;\n  };\n  \n  export const setItem = (key, value) => {\n    localStorage.setItem(key, JSON.stringify(value));\n  };", "import { setGooglePlaceDataToForm } from '$utils/googlePlace';\nimport { getItem, setItem } from '$utils/localStorage';\n\nconst googlePlaceFromStorage = getItem('restaurant');\nif (googlePlaceFromStorage) {\n  setGooglePlaceDataToForm(googlePlaceFromStorage);\n  setInputElementValue('restaurant-name', getItem('restaurant-value'));\n}\n\nconst gpaOptions = {\n  componentRestrictions: { country: 'us' },\n};\n\n$('input[name=\"restaurant-name\"]').each(function () {\n  const autocomplete = new google.maps.places.Autocomplete(this, gpaOptions);\n  const self = $(this);\n\n  autocomplete.addListener('place_changed', function () {\n    const place = autocomplete.getPlace();\n    const value = self.val();\n\n    setGooglePlaceDataToForm(place);\n    setItem('restaurant-value', value);\n    setItem('restaurant', place);\n    setInputElementValue('restaurant-name', getItem('restaurant-value'));\n    $('input[name=\"restaurant-name\"]').siblings('.field-validation').hide();\n  });\n});\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,iCAAsB,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACA7F,MAAMA,wBAAuB,CAAC,aAAa,UAAU;AACnD,MAAE,cAAc,cAAc,EAAE,IAAI,KAAK;AAAA,EAC3C;AAEA,MAAM,uBAAuB,CAAC,aAAa,kBAAkB;AAC3D,QAAI,QAAQ;AACZ,QAAI,eAAe;AAEnB,gBAAY,mBAAmB,QAAQ,CAAC,cAAc;AACpD,YAAM,cAAc,UAAU,MAAM,CAAC;AACrC,YAAM,OAAO,cAAc,mBAAmB,WAAW;AAEzD,UAAI,MAAM;AACR,cAAM,MAAM,UAAU,IAAI;AAC1B,YAAI,gBAAgB;AAAS,kBAAQ;AAAA,iBAC5B,gBAAgB;AAAiB,yBAAe;AAAA;AACpD,UAAAA,sBAAqB,aAAa,GAAG;AAAA,MAC5C;AAAA,IACF,CAAC;AAED,IAAAA,sBAAqB,sBAAsB,GAAG,gBAAgB,OAAO;AAAA,EACvE;AAEA,MAAM,WAAW,CAAC,gBAAgB;AAChC,QAAI,CAAC,YAAY;AAAO;AACxB,UAAM,gBAAgB,YAAY,MAAM,KAAK,IAAI;AACjD,IAAAA,sBAAqB,eAAe,aAAa;AAAA,EACnD;AAEA,MAAM,qBAAqB,CAAC,aAAa,kBAAkB;AACzD,WAAO,KAAK,aAAa,EAAE,QAAQ,CAAC,QAAQ;AAC1C,UAAI,QAAQ;AAAsB;AAClC,YAAM,QAAQ,YAAY,GAAG;AAC7B,UAAI;AAAO,QAAAA,sBAAqB,KAAK,KAAK;AAAA,IAC5C,CAAC;AAAA,EACH;AAEO,MAAM,2BAA2B,CAAC,gBAAgB;AACvD,QAAI,CAAC;AAAa;AAElB,UAAM,gBAAgB;AAAA,MACpB,MAAM;AAAA,MACN,4BAA4B;AAAA,MAC5B,SAAS;AAAA,MACT,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,QAClB,eAAe;AAAA,QACf,OAAO;AAAA,QACP,UAAU;AAAA,QACV,6BAA6B;AAAA,QAC7B,SAAS;AAAA,QACT,aAAa;AAAA,MACf;AAAA,IACF;AAEA,yBAAqB,aAAa,aAAa;AAC/C,aAAS,WAAW;AACpB,uBAAmB,aAAa,aAAa;AAAA,EAC/C;;;AC5DO,MAAM,UAAU,CAAC,QAAQ;AAC5B,UAAM,QAAQ,aAAa,QAAQ,GAAG;AACtC,WAAO,QAAQ,KAAK,MAAM,KAAK,IAAI;AAAA,EACrC;AAEO,MAAM,UAAU,CAAC,KAAK,UAAU;AACrC,iBAAa,QAAQ,KAAK,KAAK,UAAU,KAAK,CAAC;AAAA,EACjD;;;ACJF,MAAM,yBAAyB,QAAQ,YAAY;AACnD,MAAI,wBAAwB;AAC1B,6BAAyB,sBAAsB;AAC/C,yBAAqB,mBAAmB,QAAQ,kBAAkB,CAAC;AAAA,EACrE;AAEA,MAAM,aAAa;AAAA,IACjB,uBAAuB,EAAE,SAAS,KAAK;AAAA,EACzC;AAEA,IAAE,+BAA+B,EAAE,KAAK,WAAY;AAClD,UAAM,eAAe,IAAI,OAAO,KAAK,OAAO,aAAa,MAAM,UAAU;AACzE,UAAM,OAAO,EAAE,IAAI;AAEnB,iBAAa,YAAY,iBAAiB,WAAY;AACpD,YAAM,QAAQ,aAAa,SAAS;AACpC,YAAM,QAAQ,KAAK,IAAI;AAEvB,+BAAyB,KAAK;AAC9B,cAAQ,oBAAoB,KAAK;AACjC,cAAQ,cAAc,KAAK;AAC3B,2BAAqB,mBAAmB,QAAQ,kBAAkB,CAAC;AACnE,QAAE,+BAA+B,EAAE,SAAS,mBAAmB,EAAE,KAAK;AAAA,IACxE,CAAC;AAAA,EACH,CAAC;",
  "names": ["setInputElementValue"]
}
