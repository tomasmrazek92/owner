{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/globals.js", "../src/utils/localStorage.js", "../src/utils/googlePlace.js", "../src/utils/formValidations.js", "../src/utils/hubspotLogic.js", "../src/utils/utms.js", "../src/demo.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "export const setInputElementValue = (elementName, value) => {\n  const $input = $(`input[name=\"${elementName}\"]`);\n\n  if ($input.attr('type') === 'checkbox') {\n    $input.prop('checked', value);\n  } else {\n    $input.val(value);\n  }\n};\n\nexport const getInputElementValue = (elementName) => {\n  return $(`input[name=\"${elementName}\"]`).val();\n};\n\n// Condition Logic for input\nexport const locationType = () => {\n  $('select[name=\"person-type\"]').on('change', function () {\n    let val = $(this).val();\n\n    // Show Locations\n    if (val === \"I'm a restaurant owner or manager\") {\n      $('#locations-wrap').css('display', 'flex');\n    } else {\n      $('#locations-wrap').hide();\n    }\n  });\n};\n\n// --- VideoPlay\nexport const videoPlay = () => {\n  const videoBoxes = $('[vimeo-btn]');\n  const modal = $('[vimeo-modal]');\n  const videoElement = modal.find('video').get(0); // get DOM element from jQuery object\n\n  const initializePlayer = (videoLink) => {\n    videoElement.src = videoLink;\n    videoElement.load();\n    videoElement.play().catch(console.error);\n\n    modal.fadeIn('fast', () => {\n      $('body').addClass('no-animation');\n    });\n  };\n\n  const cleanupPlayer = () => {\n    if (document.fullscreenElement) {\n      document.exitFullscreen().catch(console.error);\n    }\n    videoElement.pause();\n    videoElement.removeAttribute('src'); // Clear the video source\n    $('body').removeClass('no-animation');\n  };\n\n  if (videoBoxes.length > 0) {\n    videoBoxes.on('click', function () {\n      const videoLink = $(this).attr('vimeo-url');\n      if (videoLink) {\n        initializePlayer(videoLink);\n      }\n    });\n\n    modal.children().not('.w-embed').on('click', cleanupPlayer);\n  }\n\n  $('[vimeo-close]').on('click', function () {\n    modal.fadeOut();\n    cleanupPlayer();\n  });\n};\n\nexport const heroVideo = () => {\n  $('[hero-video-thumb]').click(function (e) {\n    let allVideos = $('[hero-video]');\n    let video = $(this).closest('[hero-video-box]').find('[hero-video]')[0];\n    e.stopPropagation();\n\n    // Pause all expect the new one\n    allVideos.not(video).each(function () {\n      $(this)[0].pause();\n    });\n\n    if (video.paused) {\n      video.play();\n    }\n    $(this).hide();\n  });\n};\n", "// localStorage.js\nexport const getItem = (key) => {\n  const value = localStorage.getItem(key);\n  try {\n    return JSON.parse(value);\n  } catch (error) {\n    return value;\n  }\n};\n\nexport const setItem = (key, value) => {\n  const serializedValue = typeof value === 'object' ? JSON.stringify(value) : value;\n  localStorage.setItem(key, serializedValue);\n};\n", "import { toggleValidationMsg } from '$utils/formValidations';\nimport { setInputElementValue } from '$utils/globals';\nimport { getItem, setItem } from '$utils/localStorage';\n\nconst restaurantObject = 'restaurant';\n\nconst setAddressComponents = (googlePlace, componentForm) => {\n  if (!googlePlace) {\n    Object.keys(componentForm).forEach((key) => setInputElementValue(key, ''));\n    return;\n  }\n\n  let route = '';\n  let streetNumber = '';\n\n  if (googlePlace.address_components) {\n    googlePlace.address_components.forEach((component) => {\n      const addressType = component.types[0];\n\n      if (componentForm.address_components[addressType]) {\n        const val = component.long_name || component.short_name || '';\n\n        if (addressType === 'route') route = val;\n        else if (addressType === 'street_number') streetNumber = val;\n        else setInputElementValue(addressType, val);\n      }\n    });\n  }\n\n  setInputElementValue('restaurant-address', `${streetNumber} ${route}`);\n};\n\nconst processPlaceTypes = (googlePlace) => {\n  if (!googlePlace || !googlePlace.types) return;\n  const typesAsString = googlePlace.types.join(', ');\n  setInputElementValue('place_types', typesAsString);\n};\n\nconst setOtherComponents = (googlePlace, componentForm) => {\n  if (!googlePlace || !googlePlace.types) return;\n  Object.keys(componentForm).forEach((key) => {\n    if (key === 'address_components') return;\n    const value = googlePlace[key];\n    if (value) setInputElementValue(key, value);\n  });\n};\n\nconst setGooglePlaceDataToForm = (googlePlace) => {\n  const componentForm = {\n    name: '',\n    international_phone_number: '',\n    website: '',\n    place_id: '',\n    url: '',\n    rating: '',\n    user_ratings_total: '',\n    address_components: {\n      street_number: true,\n      route: true,\n      locality: true,\n      administrative_area_level_1: true,\n      country: true,\n      postal_code: true,\n    },\n  };\n\n  setAddressComponents(googlePlace, componentForm);\n  processPlaceTypes(googlePlace);\n  setOtherComponents(googlePlace, componentForm);\n};\n\nconst initGooglePlaceAutocomplete = () => {\n  const googlePlaceFromStorage = getItem(restaurantObject);\n  if (googlePlaceFromStorage) {\n    setGooglePlaceDataToForm(googlePlaceFromStorage);\n    setInputElementValue('restaurant-name', getItem('restaurant-value'));\n  }\n\n  $('input[name=\"restaurant-name\"]').each(function () {\n    const self = $(this);\n    const types =\n      self\n        .attr('data-place-types')\n        ?.match(/'([^']+)'/g)\n        ?.map((t) => t.replace(/'/g, '')) || [];\n    const country = self.attr('data-country-restrict');\n\n    const gpaOptions = {\n      language: 'en',\n    };\n\n    // Only add types if there are actually types\n    if (types.length) {\n      gpaOptions.types = types;\n    }\n\n    // Only add component restrictions if there is a country\n    if (country) {\n      gpaOptions.componentRestrictions = { country };\n    }\n\n    // Store the autocomplete instance on window\n    window.googleAutocomplete = new google.maps.places.Autocomplete(this, gpaOptions);\n\n    function setValues(state) {\n      const place = state ? window.googleAutocomplete.getPlace() : null;\n      const value = self.val();\n\n      setGooglePlaceDataToForm(place);\n      setItem('restaurant-value', value);\n      setItem(restaurantObject, place);\n      setInputElementValue('restaurant-name', getItem('restaurant-value'));\n    }\n\n    window.googleAutocomplete.addListener('place_changed', function () {\n      setValues(true);\n      toggleValidationMsg(self, false, $(self).attr('base-text'));\n    });\n\n    self.on('change', function () {\n      if ($(this).val() !== getItem('restaurant-value')) {\n        setValues(false);\n      }\n    });\n  });\n};\n\n// Initialize a flag to keep track of validation message display\nlet validationMsgShown = false;\n\nconst checkIfRestaurant = (input) => {\n  // Parse the localStorage object into a JavaScript object\n  const placeObject = JSON.parse(localStorage.getItem('restaurant'));\n\n  console.log(placeObject);\n\n  // Check if placeObject exists and has a 'types' property that is an array\n  if (placeObject && Array.isArray(placeObject.types)) {\n    const validTypes = ['bar', 'cafe', 'bakery', 'food', 'restaurant'];\n\n    // Check if any valid type exists in placeObject.types\n    const isValid = placeObject.types.some((type) => validTypes.includes(type));\n\n    // Toggle validation message if invalid and hasn't been shown before\n    if (!isValid && !validationMsgShown) {\n      toggleValidationMsg(input);\n      validationMsgShown = true;\n      return false;\n    }\n\n    return true; // Valid type found, or message has already been shown\n  }\n\n  return false; // Return false if placeObject or placeObject.types is invalid\n};\n\nexport {\n  checkIfRestaurant,\n  initGooglePlaceAutocomplete,\n  restaurantObject,\n  setGooglePlaceDataToForm,\n};\n", "import { checkIfRestaurant } from '$utils/googlePlace';\n\n// Email Validation\nfunction validateEmail(input) {\n  const emailReg = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,}$/;\n  const isValid = emailReg.test($(input).val());\n  toggleValidationMsg($(input), !isValid, 'Please fill correct email address.');\n\n  return isValid;\n}\n\n// Validate Google Place\nfunction validateGooglePlace(input) {\n  let isValid = true;\n\n  isValid = checkPlaceType(input);\n\n  return isValid;\n}\n\n// Validate CheckPlaceType\nfunction checkPlaceType(input) {\n  let isValid = checkIfRestaurant(input);\n\n  if (!isValid) {\n    toggleValidationMsg($(input), true);\n  } else {\n    toggleValidationMsg($(input), false);\n  }\n\n  return isValid;\n}\n\n// Validate Selects\nfunction validateSelect(input) {\n  let select;\n\n  // Check for custom selects\n  let searchSelect = $(input).siblings('.select2');\n  let niceSelect = $(input).siblings('.nice-select');\n  if (searchSelect) {\n    select = searchSelect.find('.select2-selection--single');\n  } else if (niceSelect) {\n    select = $(niceSelect);\n  } else {\n    select = $(input);\n  }\n\n  let isValid = true;\n\n  if ($(input).val() === '') {\n    validArr.push(selectVal);\n    $(select).addClass('is-invalid');\n    isValid = false;\n  } else {\n    $(select).removeClass('is-invalid');\n  }\n\n  return isValid;\n}\n\n// Validate Checkboy\nfunction validateCheckbox(input) {\n  if (!$(input).is(':checked')) {\n    toggleValidationMsg($(input), true);\n    return false;\n  }\n  toggleValidationMsg($(input), false);\n  return true;\n}\n\n// Validate Radio Buttons\nfunction validateRadio(input) {\n  const name = $(input).attr('name');\n  const radioGroup = $(`input[name=\"${name}\"]`);\n  const isChecked = radioGroup.is(':checked');\n\n  if (!isChecked) {\n    // For radio buttons, we typically show the error on the container/parent\n    const radioContainer = $(radioGroup).closest('.radio-group');\n    radioContainer.addClass('is-invalid');\n    toggleValidationMsg($(radioGroup[0]), true, 'Please select an option.');\n    return false;\n  }\n  const radioContainer = $(radioGroup).closest('.radio-group');\n  radioContainer.removeClass('is-invalid');\n  toggleValidationMsg($(radioGroup[0]), false);\n  return true;\n}\n\n// Validate Other Inputs\nfunction validateOtherInputs(input) {\n  toggleValidationMsg($(input), false);\n  return true;\n}\n\n// Hangle Empty Inputs\nfunction handleEmptyRequiredInput(input) {\n  if ($(input).attr('name') === 'restaurant-name') {\n    toggleValidationMsg(\n      $(input),\n      true,\n      'Please select a business location from the search results.'\n    );\n  }\n  toggleValidationMsg($(input), true);\n  return false;\n}\n\n// Input Validation\nexport const validateInput = (element) => {\n  let input = element;\n  let isValidAll = true;\n\n  if ($(input).prop('required')) {\n    if ($(input).is('[type=\"checkbox\"]')) {\n      isValidAll = validateCheckbox(input);\n    } else if ($(input).is('[type=\"radio\"]')) {\n      isValidAll = validateRadio(input);\n    } else if ($(input).val()) {\n      if ($(input).is('[type=\"email\"]')) {\n        isValidAll = validateEmail(input);\n      } else if ($(input).attr('name') === 'restaurant-name') {\n        isValidAll = validateGooglePlace(input);\n      } else if ($(input).is('select')) {\n        isValidAll = validateSelect(input);\n      } else {\n        isValidAll = validateOtherInputs(input);\n      }\n    } else {\n      isValidAll = handleEmptyRequiredInput(input);\n    }\n  }\n\n  if (!isValidAll) {\n    $(input).addClass('error');\n  } else {\n    toggleValidationMsg($(input), false);\n  }\n\n  return isValidAll;\n};\n\n// Show/Hide Validation Message\nexport const toggleValidationMsg = (element, condition, msg) => {\n  const validation = $(element)\n    .closest('.form-field-wrapper, [field-wrapper]')\n    .find('.field-validation, [field-validation]');\n  const formField = $(element).closest('.form-field, [form-field]');\n\n  formField.toggleClass('error', condition);\n  validation.toggle(condition);\n  if (msg) {\n    validation.text(msg);\n  }\n};\n\n// Check for Checkboxes and Radio Buttons\nexport const validateCheckboxRadio = (elements) => {\n  if (!elements.length) return true;\n\n  const atLeastOneChecked = elements.is(':checked');\n  const firstGroupItem = elements.first();\n  const closestWrapper = firstGroupItem.closest('.form-field-wrapper');\n\n  if (!atLeastOneChecked) {\n    toggleValidationMsg(closestWrapper, true);\n    return false;\n  }\n  toggleValidationMsg(closestWrapper, false);\n  return true;\n};\n\n// Validation Flag\nexport const validationCalled = new Set();\n", "// --- inputMatting - [wfForm: hsForm]\nconst inputMapping = {\n  name: ['company', '0-2/name'],\n  international_phone_number: ['phone', '0-2/phone'],\n  'restaurant-address': ['address', '0-2/address'],\n  locality: ['city', '0-2/city'],\n  administrative_area_level_1: ['state', '0-2/state'],\n  postal_code: ['zip', '0-2/zip'],\n  country: ['country', '0-2/country'],\n  'first-name': 'firstname',\n  'last-name': 'lastname',\n  cellphone: 'mobilephone',\n  email: 'email',\n  'person-type': 'lead_person_type',\n  website: 'website',\n  place_id: 'place_id',\n  url: 'place_cid',\n  place_types: ['place_types_contact', '0-2/place_types'],\n  rating: 'place_rating',\n  user_ratings_total: 'user_ratings_total',\n  'number-of-locations': 'of_locations_number',\n  hear: 'how_did_you_hear_about_us',\n  page_url: 'last_pdf_download',\n  page_lang: 'page_lang',\n  brizo_id: ['brizo_id', '0-2/brizo_id_account'],\n  base_enrich_date: ['auto_enrich_date', '0-2/auto_enrich_date_company'],\n  inbound_add_to_cadence: 'inbound_add_to_cadence',\n  execution_time_seconds: 'auto_enrich_time',\n  auto_dq_flag: 'auto_dq_static',\n  auto_dq_reason: ['auto_dq_reason', '0-2/auto_dq_reason_company'],\n  gmv_pred: ['pred_gmv', '0-2/pred_gmv_company'],\n  brand_emrr: 'default_brand_emrr',\n  sms_opt_in: 'sms_opt_in',\n\n  // Refers\n  referrer_s_phone_number: 'referrer_s_phone_number',\n\n  // ...\n};\n\n// --- Fill HubSpot Forms\nconst fillHubSpot = (formElement, hsform) => {\n  var $form = $(formElement);\n  var hsform = $(hsform);\n  var mapping = inputMapping;\n\n  Object.keys(mapping).forEach(function (sourceInputName) {\n    var targetInputNames = mapping[sourceInputName];\n    var $sourceInput = $form.find(\n      'input[name=\"' + sourceInputName.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&') + '\"]'\n    );\n\n    if ($sourceInput.length === 0) {\n      $sourceInput = $form.find(\n        'select[name=\"' + sourceInputName.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&') + '\"]'\n      );\n    }\n\n    var inputValue = $sourceInput.val();\n\n    if ($sourceInput.attr('type') === 'checkbox') {\n      inputValue = $sourceInput.is(':checked') ? 'true' : 'false';\n    }\n\n    if (!Array.isArray(targetInputNames)) {\n      targetInputNames = [targetInputNames];\n    }\n\n    targetInputNames.forEach(function (targetInputName) {\n      var targetInput = hsform.find(\n        'input[name=' + targetInputName.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&') + ']'\n      );\n\n      if (targetInput.attr('type') === 'checkbox') {\n        targetInput.prop('checked', String(inputValue).toLowerCase() === 'true');\n      } else if (hasMatchingSibling(targetInput, '.hs-datepicker')) {\n        targetInput.siblings('input[readonly]').val(inputValue).change();\n      } else {\n        targetInput.val(inputValue);\n      }\n\n      if (['phone', 'mobilephone', 'email', 'pred_gmv'].includes(targetInputName)) {\n        const element = targetInput.get(0);\n        if (element) {\n          element.focus({ preventScroll: true });\n          element.blur();\n        }\n      }\n    });\n  });\n};\n\n// --- Mirror HubSpot Error Messages ---\nconst mirrorHS = (hsform) => {\n  let isError = false;\n\n  // HS Phone\n  var hsPhoneVal = hsform\n    .find('input[name=mobilephone]')\n    .parent()\n    .siblings('.hs-error-msgs')\n    .find('.hs-error-msg')\n    .text();\n  var gtPhoneVal = $('input[name=\"cellphone\"]')\n    .closest('[field-wrapper]')\n    .find('[field-validation]');\n  if (hsPhoneVal) {\n    isError = true;\n    gtPhoneVal.text(hsPhoneVal);\n    gtPhoneVal.show();\n  } else {\n    gtPhoneVal.hide();\n  }\n\n  // HS Email\n  var hsEmailVal = hsform\n    .find('input[name=email]')\n    .closest('.hs-fieldtype-text')\n    .find('.hs-error-msgs')\n    .find('.hs-error-msg')\n    .text();\n  var gtEmail = $('input[name=\"email\"]').closest('[field-wrapper]').find('[field-validation]');\n  if (hsEmailVal) {\n    gtEmail.text(hsEmailVal);\n    gtEmail.show();\n    isError = true;\n  } else {\n    gtEmail.hide();\n  }\n  return isError;\n};\n\n// --- Locate Hubspot Forms\n// Function 1: Callback for onFormReady\nexport function onFormReadyCallback(form) {\n  // Resolve the promise with the located form\n  formReadyPromiseResolver(form);\n}\n\n// Function 2: Waits for function 1 to be executed and return the form\nexport function waitForFormReady() {\n  return new Promise(function (resolve) {\n    formReadyPromiseResolver = resolve;\n  });\n}\n\n// Hahdle Errors and submit form\nexport const handleHubspotForm = (formElement, hsform) => {\n  // Fill in the inputs\n  fillHubSpot(formElement, hsform);\n\n  // Wait for while and check if hsform has any validations and return promise\n  return new Promise((resolve) => {\n    // Validation\n    let isError;\n\n    // Fallback for Hubspot Validation to happen\n    setTimeout(() => {\n      // Run the Validation and stop the animation\n      isError = mirrorHS(hsform);\n      // Resolve the promise with the validation result\n      resolve(!isError);\n    }, 3000);\n  });\n};\n\n// Show loading state\nexport function toggleLoader(condition) {\n  const loader = $('[form-loader]');\n\n  if (condition) {\n    loader.find('[data-animation-type=\"lottie\"]').trigger('click');\n    loader.fadeIn();\n  } else {\n    loader.hide();\n  }\n}\n\n// Declare formReadyPromiseResolver variable\nlet formReadyPromiseResolver;\n\n// Check for sibling\nfunction hasMatchingSibling(inputElement, selector) {\n  // Ensure inputElement is a jQuery object and extract the first DOM element\n  const domElement = inputElement[0] || inputElement.get(0);\n  if (!domElement) {\n    return false;\n  }\n\n  const { parentNode } = domElement;\n  if (!parentNode) {\n    return false;\n  }\n\n  return Array.from(parentNode.children).some((sib) => sib !== domElement && sib.matches(selector));\n}\n", "// Function to get all query parameters from URL\nfunction getQueryParams() {\n  const params = {};\n  const queryString = window.location.search;\n\n  if (queryString) {\n    const urlParams = new URLSearchParams(queryString);\n    urlParams.forEach(function (value, key) {\n      // Convert the key to lowercase for consistent handling\n      const lowercaseKey = key.toLowerCase();\n      params[lowercaseKey] = value;\n    });\n  }\n\n  return params;\n}\n\n// Save parameters to sessionStorage as a single JSON object\nfunction saveParamsToSession(params) {\n  if (Object.keys(params).length > 0) {\n    // Store all UTM parameters as a single JSON string\n    sessionStorage.setItem('utmWebParams', JSON.stringify(params));\n  }\n}\n\n// Get parameters from sessionStorage\nexport function getParamsFromSession() {\n  const utmParamsString = sessionStorage.getItem('utmWebParams');\n\n  // Return empty object if no params found\n  if (!utmParamsString) {\n    return {};\n  }\n\n  try {\n    // Parse the JSON string back to an object\n    return JSON.parse(utmParamsString);\n  } catch (e) {\n    console.error('Error parsing UTM params from sessionStorage:', e);\n    return {};\n  }\n}\n\n// Function to handle form parameters - preserves ALL UTMs\nexport function handleUTMParams() {\n  // Get URL parameters first\n  const urlParams = getQueryParams();\n\n  // ALWAYS get existing params from session first\n  const sessionParams = getParamsFromSession();\n\n  // Start with all existing parameters\n  const mergedParams = { ...sessionParams };\n\n  // Add any new URL parameters or update existing ones\n  if (Object.keys(urlParams).length > 0) {\n    // Only update the specific parameters present in the URL\n    Object.keys(urlParams).forEach((key) => {\n      mergedParams[key] = urlParams[key];\n    });\n\n    // Save back to session\n    saveParamsToSession(mergedParams);\n  }\n\n  return mergedParams;\n}\n\n// Initialize on page load with jQuery\n$(document).ready(function () {\n  const params = handleUTMParams();\n  console.log('UTM Parameters:', params);\n});\n\n// Debug function to view current UTM parameters (can be removed in production)\nexport function showCurrentUTMs() {\n  return getParamsFromSession();\n}\n", "import { validateInput } from '$utils/formValidations';\nimport { getInputElementValue, locationType, setInputElementValue } from '$utils/globals';\nimport {\n  handleHubspotForm,\n  onFormReadyCallback,\n  toggleLoader,\n  waitForFormReady,\n} from '$utils/hubspotLogic';\nimport { getItem, setItem } from '$utils/localStorage';\nimport { getParamsFromSession } from '$utils/utms';\n\nconst timer = (() => {\n  const logs = [];\n  let lastTime = 0;\n  let startTime = 0;\n  let globalIndex = 0;\n  let isPaused = true;\n  let totalPausedTime = 0;\n  let pauseStartTime = 0;\n\n  const logToConsole = (type, index, label, stepTime, actualTotalTime, data) => {\n    if (\n      localStorage.getItem('isStagingForMe') === 'true' ||\n      window.location.origin.includes('webflow.io')\n    ) {\n      if (type === 'event') {\n        console.log(\n          `[Event #${index}]: ${label}: ${stepTime.toFixed(\n            2\n          )}ms (active time: ${actualTotalTime.toFixed(2)}ms)`\n        );\n        if (data && Object.keys(data).length > 0) {\n          console.log('  Data:', data);\n        }\n      } else if (type === 'pause') {\n        console.log('[Timer]: Paused');\n      } else if (type === 'resume') {\n        console.log('[Timer]: Resumed');\n      } else if (type === 'table') {\n        console.table(logs);\n      }\n    }\n  };\n\n  return {\n    log: (label, data) => {\n      const now = performance.now();\n\n      if (!startTime) {\n        startTime = now;\n        lastTime = now;\n        globalIndex = 1;\n        logs.push({ label, step: 0, total: 0, index: globalIndex, data });\n\n        logToConsole('event', globalIndex, label, 0, 0, data);\n        return;\n      }\n\n      globalIndex++;\n\n      let actualTotalTime = now - startTime - totalPausedTime;\n      if (isPaused && pauseStartTime) {\n        actualTotalTime -= now - pauseStartTime;\n      }\n\n      const stepTime = now - lastTime;\n\n      logs.push({ label, step: stepTime, total: actualTotalTime, index: globalIndex, data });\n      lastTime = now;\n\n      logToConsole('event', globalIndex, label, stepTime, actualTotalTime, data);\n    },\n\n    pause: () => {\n      if (!isPaused) {\n        isPaused = true;\n        pauseStartTime = performance.now();\n        logToConsole('pause');\n      }\n    },\n\n    resume: () => {\n      if (isPaused && pauseStartTime) {\n        totalPausedTime += performance.now() - pauseStartTime;\n        isPaused = false;\n        pauseStartTime = 0;\n        logToConsole('resume');\n      }\n    },\n\n    dump: () => {\n      logToConsole('table');\n      return logs;\n    },\n\n    reset: () => {\n      logs.length = 0;\n      lastTime = 0;\n      startTime = 0;\n      globalIndex = 0;\n      isPaused = true;\n      totalPausedTime = 0;\n      pauseStartTime = 0;\n    },\n\n    getLogs: () => logs,\n  };\n})();\n\n// Load required scripts\nfunction loadScript(src, callback) {\n  const script = document.createElement('script');\n  script.src = src;\n  script.async = true;\n  document.head.appendChild(script);\n\n  script.onload = function () {\n    if (callback) callback();\n  };\n\n  script.onerror = function () {\n    console.error('Failed to load script:', src);\n  };\n}\n\n$(document).ready(() => {\n  // Load scripts\n  loadScript('https://import-cdn.default.com/sdk.js');\n\n  let isDev = window.location.href.indexOf('dev') !== -1;\n\n  // Qualification Variable\n  let qualified;\n  let isSchedule = typeof scheduleFlow !== 'undefined' && scheduleFlow;\n\n  // User ID\n  // check cookies for an existing user ID\n  let webUserId = $.cookie('webTempTatariUserId');\n\n  // Also save to window level\n  if (webUserId) {\n    window.webUserId = webUserId;\n  }\n\n  // #region Functions\n\n  // Handle redirect\n  function handleRedirect(redirect) {\n    if (isDev) return;\n\n    let placeId = getInputElementValue('place_id');\n    let resName = getInputElementValue('name');\n    let dqFlaq = getInputElementValue('auto_dq_flag');\n    let prosResult = dqFlaq === 'False' ? 'aql' : 'non-aql';\n\n    const defaultUrl = window.location.href.includes('/demo-grader')\n      ? '/demo-thank-you-grader'\n      : '/funnel-demo-requested';\n\n    const finalRedirect = `${\n      redirect || defaultUrl\n    }?placeid=${placeId}&resname=${resName}&prosresult=${prosResult}`;\n\n    // Track\n    logMixpanel('Form - Success - Redirect', { redirectUrl: finalRedirect });\n\n    window.location.href = finalRedirect;\n  }\n\n  const processMap = new Map();\n\n  function logMixpanel(status, additionalData, options) {\n    options = options || {};\n    additionalData = additionalData || {};\n\n    const shouldDumpTimer = options.dumpTimer || false;\n    const includeConsoleLog = options.consoleLog !== false;\n    const skipFormData = options.skipFormData || false;\n\n    const isProcessStart = status.toLowerCase().includes('start');\n    const isProcessEnd = status.toLowerCase().includes('end');\n\n    if (isProcessStart) {\n      const processName = options.processName || status.split(' - ')[0];\n      const now = performance.now();\n\n      if (!processMap.has(processName)) {\n        processMap.set(processName, {\n          startTime: now,\n          totalPausedTime: 0,\n          pauseStartTime: 0,\n          isPaused: false,\n        });\n      } else {\n        const process = processMap.get(processName);\n        if (process.isPaused) {\n          process.totalPausedTime += now - process.pauseStartTime;\n          process.pauseStartTime = 0;\n          process.isPaused = false;\n        }\n      }\n\n      timer.resume();\n    }\n\n    let processCompleteLog = null;\n\n    if (isProcessEnd) {\n      const processName = options.processName || status.split(' - ')[0];\n      const now = performance.now();\n      const process = processMap.get(processName);\n\n      if (process) {\n        if (process.isPaused && process.pauseStartTime) {\n          process.totalPausedTime += now - process.pauseStartTime;\n        }\n\n        const totalActiveTime = now - process.startTime - process.totalPausedTime;\n\n        processCompleteLog = `[Process Complete]: \"${processName}\" took ${totalActiveTime.toFixed(\n          2\n        )}ms (active only)`;\n\n        processMap.delete(processName);\n      } else {\n        processCompleteLog = `[Process Warning]: End called for unknown process \"${processName}\"`;\n      }\n\n      if (processMap.size === 0) timer.pause();\n    }\n\n    if (includeConsoleLog) {\n      timer.log(status, additionalData);\n    }\n\n    if (processCompleteLog) {\n      // console.log(processCompleteLog);\n    }\n\n    function getBrowserAndDeviceInfo() {\n      const { userAgent } = navigator;\n      const browser = navigator.appName;\n      const { platform } = navigator;\n      const { language } = navigator;\n\n      return {\n        userAgent,\n        browser,\n        platform,\n        language,\n      };\n    }\n\n    function parseJSONStrings(obj) {\n      const parsed = {};\n      for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          const value = obj[key];\n          if (typeof value === 'string' && value.length > 0) {\n            const firstChar = value.trim().charAt(0);\n            if (firstChar === '[' || firstChar === '{') {\n              try {\n                parsed[key] = JSON.parse(value);\n              } catch (e) {\n                parsed[key] = value;\n              }\n            } else {\n              parsed[key] = value;\n            }\n          } else {\n            parsed[key] = value;\n          }\n        }\n      }\n      return parsed;\n    }\n\n    function flattenObject(obj, prefix = '') {\n      const flattened = {};\n\n      for (const key in obj) {\n        if (!obj.hasOwnProperty(key)) continue;\n\n        const value = obj[key];\n        const newKey = prefix ? `${prefix}_${key}` : key;\n\n        if (value === null || value === undefined) {\n          flattened[newKey] = value;\n        } else if (Array.isArray(value)) {\n          value.forEach((item, index) => {\n            if (typeof item === 'object' && item !== null) {\n              Object.assign(flattened, flattenObject(item, `${newKey}_${index}`));\n            } else {\n              flattened[`${newKey}_${index}`] = item;\n            }\n          });\n        } else if (typeof value === 'object') {\n          Object.assign(flattened, flattenObject(value, newKey));\n        } else {\n          flattened[newKey] = value;\n        }\n      }\n\n      return flattened;\n    }\n\n    const userInfo = getBrowserAndDeviceInfo();\n    const parsedAdditionalData = parseJSONStrings(additionalData);\n\n    let eventVars = {\n      ...userInfo,\n      ...parsedAdditionalData,\n    };\n\n    if (!skipFormData && typeof wfForm !== 'undefined') {\n      const firstName = wfForm.find($('input[name=first-name]')).val();\n      const lastName = wfForm.find($('input[name=last-name]')).val();\n      const restaurantName = wfForm.find($('input[name=name]')).val();\n      const phone = wfForm.find($('input[name=cellphone]')).val();\n      const email = wfForm.find($('input[name=email]')).val();\n\n      eventVars = {\n        ...eventVars,\n        displayName: firstName + ' ' + lastName,\n        restaurantName: restaurantName,\n        phone: phone,\n        email: email,\n        firstName: firstName,\n        lastName: lastName,\n      };\n    }\n\n    const timerLogs = timer.getLogs();\n\n    if (timerLogs.length > 0) {\n      const lastLog = timerLogs[timerLogs.length - 1];\n\n      eventVars.stepActiveTime = lastLog.step;\n      eventVars.totalActiveTime = lastLog.total;\n      eventVars.eventIndex = lastLog.index;\n\n      if (processMap.size > 0) {\n        const [processName, process] = processMap.entries().next().value;\n        eventVars.processTime = performance.now() - process.startTime - process.totalPausedTime;\n        eventVars.processName = processName;\n      }\n    }\n\n    const flattenedEventVars = flattenObject(eventVars);\n\n    if (typeof mixpanel !== 'undefined' && mixpanel) {\n      if (typeof webUserId !== 'undefined' && webUserId) {\n        mixpanel.identify(webUserId);\n      }\n\n      if (!skipFormData && typeof wfForm !== 'undefined') {\n        const firstName = flattenedEventVars.firstName;\n        const lastName = flattenedEventVars.lastName;\n        const email = flattenedEventVars.email;\n        const phone = flattenedEventVars.phone;\n        const restaurantName = flattenedEventVars.restaurantName;\n\n        if (email || phone) {\n          mixpanel.people.set({\n            $first_name: firstName,\n            $last_name: lastName,\n            $email: email,\n            $phone: phone,\n            restaurantName: restaurantName,\n            ...userInfo,\n          });\n        }\n      }\n\n      mixpanel.track(status, flattenedEventVars);\n    }\n\n    if (shouldDumpTimer) {\n      if (typeof mixpanel !== 'undefined' && mixpanel && timerLogs.length > 0) {\n        const timerEventVars = {\n          ...userInfo,\n          parentEvent: status,\n          totalActiveTime: timerLogs[timerLogs.length - 1].total,\n        };\n\n        timerLogs.forEach((logEntry, idx) => {\n          const stepKey = logEntry.label || `step_${idx + 1}`;\n          timerEventVars[stepKey] = logEntry.step;\n        });\n\n        mixpanel.track('Full Timer Log', timerEventVars);\n      }\n\n      timer.dump();\n      timer.reset();\n    }\n  }\n\n  function trackCapterra() {\n    var capterra_vkey = 'db833abde57f505b06b0e4b2bfe5e24f',\n      capterra_vid = '2226621',\n      ct = document.createElement('img');\n    ct.src =\n      'https://ct.capterra.com/capterra_tracker.gif?vid=' + capterra_vid + '&vkey=' + capterra_vkey;\n    document.body.appendChild(ct);\n  }\n\n  // store Restaurant\n  const getRestaurant = () => {\n    let restaurant = getItem('restaurant');\n\n    // Track\n    logMixpanel('Form Init - GetRestaurant', { restaurant: restaurant });\n\n    return restaurant;\n  };\n\n  // Qualification Flow Divider\n  function checkQualification() {\n    // Track\n    logMixpanel('Form Qualification - Start');\n\n    let isOwner;\n    let isUS;\n\n    return new Promise((resolve, reject) => {\n      try {\n        if (isSchedule) {\n          let restaurant = getRestaurant();\n\n          // Resetting the flag\n          qualified = undefined;\n\n          // Conditions\n          isOwner = $('select[name=\"person-type\"]').val() === \"I'm a restaurant owner or manager\";\n          isUS = restaurant.address_components.some((component) => component.short_name === 'US');\n\n          // Instantly follow to success link - Unqualified\n          if (!isOwner || !isUS) {\n            qualified = false;\n          }\n        } else {\n          // Track\n          logMixpanel('Form Qualification - End', {\n            status: 'No Schedule Flow',\n          });\n\n          // temp for static purpose\n          qualified = false;\n        }\n\n        // Track\n        logMixpanel('Form Qualification - End', {\n          status:\n            qualified === undefined || qualified === true\n              ? 'Success - Qualified for Enrichment'\n              : 'Submission InstaDisqualified',\n          isOwner: isOwner,\n          isUS: isUS,\n        });\n\n        resolve(); // Resolve the promise after evaluation\n      } catch (error) {\n        // Track\n        logMixpanel('Form Qualification - End', {\n          status: 'Flow Error',\n          errorMessage: error.message,\n          errorType: error.name,\n        });\n\n        reject(error); // Reject the promise if an error occurs\n      }\n    });\n  }\n\n  // Qualification API Call\n  function callQualification() {\n    let restaurant = getRestaurant();\n    let data = {\n      name: restaurant.name,\n      address: restaurant.formatted_address,\n      website: restaurant.website,\n      email: 'jonathan@owner.com',\n      token: 'AJXuyxPXgGF68NMv',\n      sfdc_id: 'None',\n    };\n\n    function callApi(data) {\n      return new Promise((resolve, reject) => {\n        // Track\n        logMixpanel('Enrichment API - Start');\n\n        $.ajax({\n          url: 'https://owner-ops.net/business-info/',\n          type: 'POST',\n          contentType: 'application/json',\n          dataType: 'json',\n          data: JSON.stringify(data),\n          timeout: 40000,\n          success: function (response) {\n            // Track\n            logMixpanel('Enrichment API - End', {\n              status: 'Completed',\n              response: response,\n            });\n            resolve(response);\n          },\n          error: function (xhr, status, error) {\n            // Track\n            logMixpanel('Enrichment API - End', {\n              error: error,\n              status: xhr.status,\n              response: xhr.responseJSON || xhr.responseText,\n            });\n\n            if (status === 'timeout') {\n              setInputElementValue('execution_time_seconds', 40);\n              setInputElementValue('gmv_pred', 0);\n            }\n\n            resolve(null);\n          },\n        });\n      });\n    }\n\n    return callApi(data).then((response) => {\n      if (response && response[0]) {\n        return response[0];\n      }\n      return false; // Return false if no valid response\n    });\n  }\n\n  // Fill data from API\n  function fillFormWithMatchingData(apiData, flag) {\n    const inputs = $('[demo-form] input');\n    const allowedKeys = [\n      'brizo_id',\n      'base_enrich_date',\n      'inbound_add_to_cadence',\n      'execution_time_seconds',\n      'auto_dq_flag',\n      'auto_dq_reason',\n      'gmv_pred',\n    ];\n\n    // Flag = We run this only when the apiCall runned\n    if (flag) {\n      // Fill all the fiels coming from API\n      inputs.each(function () {\n        const inputName = $(this).attr('name');\n        if (allowedKeys.includes(inputName) && apiData.hasOwnProperty(inputName)) {\n          var value = apiData[inputName];\n\n          if (typeof value === 'string' && value.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/)) {\n            $(this).val(value.split('T')[0]);\n          } else if (typeof value === 'number' || (!isNaN(value) && !isNaN(parseFloat(value)))) {\n            $(this).val(Number(value).toFixed(2));\n          } else {\n            $(this).val(value);\n          }\n        }\n      });\n\n      // Also calculate the brand_emrr\n      function calculateEMRR() {\n        let predGMV = apiData.gmv_pred;\n        let locations = parseInt(getInputElementValue('number-of-locations'));\n\n        let EMRR;\n\n        if (locations === 1) {\n          EMRR = 499 + 0.05 * predGMV;\n        } else {\n          EMRR = 599 + 0.05 * predGMV * locations + 299 * (locations - 1);\n        }\n\n        setInputElementValue('brand_emrr', EMRR);\n      }\n      calculateEMRR();\n    } else {\n      fillStaticAPIFields(false);\n    }\n  }\n\n  // Validate Fields Internally\n  function internalValidation(el) {\n    // Track\n    logMixpanel('Form Internal Validation - Start');\n\n    // Global Validate checker\n    let isValid = true;\n\n    // Validate all inputs internally\n    el.find(':input:visible, select').each(function () {\n      let validate = validateInput($(this));\n      isValid = isValid && validate;\n    });\n\n    // Track\n    logMixpanel('Form Internal Validation - End', { status: isValid });\n\n    return isValid;\n  }\n\n  // Fill Custom Fields for the insta flow\n  function fillStaticAPIFields(type) {\n    setInputElementValue('base_enrich_date', new Date().toISOString().slice(0, 10));\n    setInputElementValue('inbound_add_to_cadence', 'true');\n    // Inputs for insta Disqualification\n    if (type === false) {\n      setInputElementValue('execution_time_seconds', 0);\n      setInputElementValue('auto_dq_flags', 'true');\n    }\n    // Inputs for insta Qualifiation - Currently NOT USED in the flow\n    if (type === true) {\n      setInputElementValue('execution_time_seconds', 0);\n      setInputElementValue('auto_dq_reason', 'none');\n      setInputElementValue('auto_dq_flags', 'false');\n      setInputElementValue('self_service_scheduling_shown', true);\n    }\n  }\n\n  function fillCustomFields() {\n    // Some quick input filling\n    setInputElementValue('page_url', isSchedule ? '/demo-schedule' : window.location.pathname);\n    setInputElementValue('page_lang', $('html').attr('lang'));\n    setInputElementValue(\n      'url',\n      (() => {\n        // Splitting the URL at 'cid=' and taking the second part\n        var restaurant = getRestaurant();\n        if (restaurant && restaurant.url) {\n          var cidLink = restaurant.url;\n          return cidLink.split('cid=')[1];\n        }\n        return 'none'; // or an appropriate fallback value\n      })()\n    );\n\n    // Function to set input field values from UTM parameters\n    function fillFormInputsFromUTMs() {\n      // Get all UTM parameters from session storage\n      const utmParams = getParamsFromSession();\n\n      if (!utmParams || Object.keys(utmParams).length === 0) {\n        return;\n      }\n\n      // Find all form inputs to check against\n      const allInputs = $('input');\n\n      // Group inputs by whether they have the \"0-2/\" prefix or not\n      const regularInputs = {};\n      const prefixedInputs = {};\n\n      allInputs.each(function () {\n        const inputName = $(this).attr('name');\n        if (!inputName) return;\n\n        if (inputName.startsWith('0-2/')) {\n          // For prefixed inputs, store with the key being everything after \"0-2/\"\n          const baseKey = inputName.substring(4); // Remove \"0-2/\"\n          prefixedInputs[baseKey] = $(this);\n        } else {\n          // Store regular inputs with their full name\n          regularInputs[inputName] = $(this);\n        }\n      });\n\n      // For each UTM parameter, try to find matching inputs\n      Object.keys(utmParams).forEach((paramName) => {\n        const paramValue = utmParams[paramName];\n\n        if (!paramValue) return;\n\n        // Check if we have a regular input matching this param name\n        if (regularInputs[paramName]) {\n          regularInputs[paramName].val(paramValue);\n        }\n\n        // Check if we have a prefixed input where the base name matches\n        if (prefixedInputs[paramName]) {\n          prefixedInputs[paramName].val(paramValue);\n        }\n      });\n    }\n    fillFormInputsFromUTMs();\n\n    // Fill User Id\n    setInputElementValue('web_user_id', webUserId);\n  }\n\n  function disableButton(state) {\n    // Choose which button\n    let button;\n    if ($('[data-form=\"submit-btn\"]').is(':visible')) {\n      button = $('[data-form=\"submit-btn\"]');\n    } else {\n      button = $('[data-form=\"next-btn\"]');\n    }\n\n    if (state) {\n      const originalText = button.text();\n      button.addClass('disabled');\n      button.attr('data-original-text', originalText);\n      button.children('div:first-child').text('Processing');\n    } else {\n      const originalText = button.attr('data-original-text');\n      button.removeClass('disabled');\n      button.children('div:first-child').text(originalText);\n    }\n  }\n\n  // Run the Qualification Logic\n  async function processQualification() {\n    // Init\n    disableButton(true);\n\n    // Validate Fields\n    let validation = internalValidation(wfForm);\n\n    // Proceed only if validation pass\n    if (validation) {\n      toggleLoader(true);\n      try {\n        // Wait for checkQualification to complete\n        await checkQualification();\n\n        // Call API only if InstaQualification is not set\n        if (typeof qualified !== 'boolean') {\n          const result = await callQualification();\n          const dqFlag = result.auto_dq_flag;\n\n          // We tag all submissions which runned the API\n          setInputElementValue('self_service_enrichment_api_used', true);\n\n          // We check if the returned value contains the dgFlag\n          if (typeof dqFlag === 'string') {\n            qualified = result.auto_dq_flag === 'True' ? false : true; // if dgFlaq equals true, it means its disqualified.\n            fillFormWithMatchingData(result, true); // We fill the data with API logic\n\n            if (qualified) {\n              setInputElementValue('self_service_scheduling_shown', true); // We tag the checkbox as the final destination is the schedule page\n            }\n          } else {\n            qualified = false; // No API Result so insta disqualified\n            fillFormWithMatchingData(result, false); // We fill the data without API\n          }\n        } else {\n          fillStaticAPIFields(qualified);\n        }\n      } catch (error) {\n        qualified = false;\n      }\n\n      // Proceed -- DO NOT EDIT !!!!\n      fillCustomFields();\n      disableButton(false);\n\n      logMixpanel('Form Mirror - Hubspot - Start');\n      let handler = await handleHubspotForm(wfForm, hsForm);\n      logMixpanel('Form Mirror - Hubspot - End', { status: handler });\n\n      return handler;\n    }\n\n    disableButton(false);\n    return false;\n  }\n\n  // Handle Submit\n  async function fireSubmit() {\n    // Reset timer\n    timer.reset();\n\n    // Track\n    logMixpanel('Submit Attempt - Start');\n\n    // Qualify the User\n    let qualification = await processQualification();\n\n    if (qualification) {\n      // Scrape the data for the SDK\\\n      capturedFormData = scrapeFormFields();\n\n      // Track\n      logMixpanel('Submit Attempt - End', { status: 'success' });\n      logMixpanel('HS Form - Submission - Start');\n\n      // Fire the submission\n      hsForm[0].submit();\n    } else {\n      // Track\n      logMixpanel('Submit Attempt - End', { status: 'validation failed' });\n      toggleLoader(false);\n    }\n  }\n\n  const successSubmit = () => {\n    const success = $('.demo-form_success');\n    const shouldRedirect =\n      !window.location.href.includes('/blog/') &&\n      !window.location.href.includes('/resources/') &&\n      !window.location.href.includes('/downloads/');\n    const redirectUrl = wfForm.attr('data-custom-redirect');\n    const showSchedule = isSchedule && qualified && !redirectUrl;\n\n    // Toggle Loading\n    wfForm.hide();\n    toggleLoader(false);\n\n    // We proceed with the selfSchedule only if we are in the scheduleFlow + we don't have custom redirect set\n    if (showSchedule) {\n      // Check if we have a valid scheduler URL from Default SDK\n      if (window.defaultSchedulerUrl) {\n        var settings = {\n          link: window.defaultSchedulerUrl,\n          selector: '.demo-form_success-box',\n        };\n\n        function replaceMeetingEmbed() {\n          var url = new URL(settings.link);\n\n          $(settings.selector).html(\n            '<div class=\"meetings-iframe-container\" style=\"width: 100%; height: 900px;\"><iframe src=\"' +\n              url.toString() +\n              '\" width=\"100%\" height=\"100%\" frameborder=\"0\" allow=\"camera; microphone; autoplay; encrypted-media; fullscreen; display-capture\"></iframe></div>'\n          );\n          success.css('background-color', 'white');\n          success.show();\n        }\n\n        logMixpanel('Default Scheduler - Open');\n\n        replaceMeetingEmbed();\n      } else {\n        // No scheduler URL from Default SDK, redirect to static page\n        success.show();\n      }\n    }\n\n    // Track\n    logMixpanel(\n      'Form - Success Submission',\n      {},\n      {\n        dumpTimer: true,\n      }\n    );\n\n    // Success State flow\n    if (redirectUrl) {\n      success.show();\n      handleRedirect(redirectUrl);\n    } else if (shouldRedirect && !showSchedule) {\n      success.show();\n      handleRedirect();\n    } else if (!showSchedule) {\n      success.show();\n    }\n  };\n\n  // #endregion\n\n  // #region Flow Logic\n\n  // 1. Define Forms\n  let wfForm = $('[demo-form]');\n  let hsForm;\n\n  // 2. Initialize the HubSpot form\n\n  // Default form ID\n  let formId = 'f3807262-aed3-4b9c-93a3-247ad4c55e60';\n  let portalId = '6449395';\n  const currentUrl = window.location.href;\n\n  // Form for resources\n  if (currentUrl.indexOf('/resources/') !== -1) {\n    formId = '66b9776c-c640-4b5a-8807-439a721001ff';\n  }\n\n  // Referall Page Form\n  if (currentUrl.indexOf('refer') !== -1) {\n    formId = '969fbdc3-b662-4428-a208-c78b8f20efa6';\n  }\n\n  // Dev QA\n  if (isDev) {\n    formId = 'e13f4000-0da1-48db-bc88-752e55c82fe7';\n    portalId = '50356338';\n  }\n\n  let capturedFormData = null;\n  let defaultSdkComplete = false;\n\n  hbspt.forms.create({\n    portalId: portalId,\n    formId: formId,\n    target: '#hbst-form',\n    onFormReady: onFormReadyCallback,\n    onFormSubmitted: async (data) => {\n      // Track\n      logMixpanel('HS Form - Submission - End', { status: 'success' });\n\n      // Handle Default\n      submitToDefaultSDK();\n      await waitForDefaultSdk();\n\n      // Shows Result\n      setTimeout(() => {\n        successSubmit();\n      }, 500);\n\n      trackCapterra();\n    },\n  });\n\n  // 3. Wait for hsform to be ready so we can refference it\n  waitForFormReady().then(function (form) {\n    // Track\n    logMixpanel('HSform - Ready');\n\n    hsForm = $(form);\n  });\n\n  // 4. Submit Action\n  $('[data-form=submit-btn]').on('click', fireSubmit);\n\n  // #endregion\n\n  // #region Custom Actions\n  locationType();\n\n  // Format US Phone Number\n  $('[data-cleave-phone]').each(function () {\n    new Cleave($(this), {\n      numericOnly: true,\n      blocks: [0, 3, 3, 4, 10],\n      delimiters: ['(', ') ', '-'],\n      delimiterLazyShow: true,\n    });\n  });\n\n  // Format Location Numbers\n  function validateNumLocations(input) {\n    const $input = $(input);\n    let value = $input.val().replace(/\\D/g, '');\n\n    if (value !== '') {\n      const numValue = parseInt(value);\n      if (numValue > 999) {\n        $input.val('999');\n      } else if (numValue < 1) {\n        $input.val('1');\n      } else {\n        $input.val(value);\n      }\n    }\n\n    return value !== '' && parseInt(value) >= 1 && parseInt(value) <= 999;\n  }\n\n  $('#number-of-locations').on('input', function () {\n    validateNumLocations(this);\n  });\n\n  $('#number-of-locations').on('blur', function () {\n    const $input = $(this);\n    if ($input.val() === '' || parseInt($input.val()) < 1) {\n      $input.val('1');\n    }\n  });\n  //#endregion\n\n  // #region defaulSDK\n  function scrapeFormFields() {\n    logMixpanel('Default Scrapper - Start');\n\n    const form = $(hsForm);\n    const questions = [];\n    const responses = {};\n    const questionMap = {};\n    const numericFields = ['default_brand_emrr', 'pred_gmv', 'pred_gmv_company'];\n\n    form.find('input, textarea, select').each(function () {\n      const $field = $(this);\n      const fieldType = $field.attr('type');\n      const fieldTag = $field.prop('tagName').toLowerCase();\n      let fieldName = $field.attr('name');\n\n      if (fieldName && fieldName.includes('/')) {\n        fieldName = fieldName.split('/').pop();\n      }\n\n      const fieldId = fieldName;\n      const label =\n        $(`label[for=\"${fieldId}\"]`).text().trim() ||\n        $field.closest('.field, .hs-form-field').find('label').text().trim() ||\n        $field.attr('placeholder') ||\n        fieldName;\n\n      if (!$field.attr('name') || fieldType === 'submit') return;\n      if (!label || !fieldId) return;\n\n      let questionType = 'input';\n      let options = [];\n      let fieldValue = $field.val() || '';\n\n      if (fieldType === 'checkbox') {\n        fieldValue = $field.is(':checked') ? 'true' : 'false';\n        questionType = 'checkbox';\n        options = [fieldValue];\n      } else if (fieldType === 'radio') {\n        if (!$field.is(':checked')) return;\n        fieldValue = $field.val().toString();\n        questionType = 'radio';\n        options = [fieldValue];\n      } else {\n        if (!fieldValue.trim() && fieldType !== 'hidden') return;\n\n        if (fieldType === 'email') {\n          questionType = 'email';\n          const question = { id: 'email', name: 'email', label: 'email', type: questionType };\n          if (options.length) question.options = options;\n\n          questions.push(question);\n          responses['email'] = fieldValue;\n          questionMap['email'] = question;\n          return;\n        } else if (fieldType === 'tel' || fieldType === 'phone') questionType = 'tel';\n        else if (fieldTag === 'textarea') questionType = 'textarea';\n        else if (fieldTag === 'select') {\n          questionType = 'select';\n          $field.find('option').each(function () {\n            const optionValue = $(this).val();\n            if (optionValue && !$(this).is(':disabled')) options.push(optionValue.toString());\n          });\n        }\n      }\n\n      if (questionMap[label]) {\n        const existingQuestion = questionMap[label];\n        if (options.length) {\n          options.forEach((opt) => {\n            const strOpt = opt.toString();\n            if (!existingQuestion.options) existingQuestion.options = [];\n            if (!existingQuestion.options.includes(strOpt)) existingQuestion.options.push(strOpt);\n          });\n        }\n\n        if (questionType === 'checkbox') {\n          const existingValue = responses[existingQuestion.id];\n          responses[existingQuestion.id] = existingValue\n            ? Array.isArray(existingValue)\n              ? [...existingValue, fieldValue]\n              : [existingValue, fieldValue]\n            : [fieldValue];\n        } else {\n          const finalValue =\n            numericFields.includes(existingQuestion.id) && fieldValue !== ''\n              ? parseFloat(fieldValue)\n              : fieldValue;\n          responses[existingQuestion.id] = finalValue;\n        }\n        return;\n      }\n\n      const question = { id: fieldId, name: fieldName, label: label, type: questionType };\n      if (options.length) question.options = options;\n\n      questions.push(question);\n\n      const finalValue =\n        numericFields.includes(fieldId) && fieldValue !== '' ? parseFloat(fieldValue) : fieldValue;\n      responses[fieldId] = finalValue;\n      questionMap[label] = question;\n    });\n\n    logMixpanel('Default Scrapper - End', { questions, responses });\n    return { questions, responses };\n  }\n\n  function submitToDefaultSDK() {\n    // Track\n    logMixpanel('DefaultSDK - Submission Attempt - Start');\n\n    if (!capturedFormData) {\n      // Track\n      logMixpanel('DefaultSDK - Submission Attempt - End', {\n        status: 'No form data',\n      });\n      return;\n    }\n\n    const emailField = Object.keys(capturedFormData.responses).find((key) => key.includes('email'));\n    const emailValue = emailField ? capturedFormData.responses[emailField] : null;\n\n    if (!emailValue) {\n      // Track\n      logMixpanel('DefaultSDK - Submission Attempt - End', {\n        status: 'No email found',\n      });\n\n      window.defaultSchedulerUrl = null;\n      defaultSdkComplete = true;\n      return;\n    }\n\n    // Use correct structure from docs\n    const data = {\n      form_id: 593374,\n      team_id: 514,\n      email: emailValue,\n      responses: capturedFormData.responses,\n      questions: capturedFormData.questions,\n    };\n\n    const options = {\n      autoSchedulerDisplay: false,\n      onSuccess: (response) => {\n        // Track\n        logMixpanel('DefaultSDK - Submission Attempt - End', {\n          status: 'Success',\n          response: response,\n        });\n\n        window.defaultSchedulerUrl = response ? response.body.stepDetails.url : null;\n        defaultSdkComplete = true;\n      },\n      onError: (error) => {\n        // Track\n        logMixpanel('DefaultSDK - Submission Attempt - End', {\n          status: error,\n        });\n\n        window.defaultSchedulerUrl = null;\n        defaultSdkComplete = true;\n      },\n      onSchedulerClosed: (data) => {\n        // Track\n        logMixpanel('Default Scheduler - Closed');\n        handleRedirect();\n      },\n      onMeetingBooked: (data) => {\n        // Redirect to thank you page with a timer\n        $('[data-form-success]').css('display', 'flex');\n        setTimeout(() => {\n          let countdown = 5;\n          const timer = $('[data-redirect-timer]');\n\n          timer.text(countdown);\n\n          const interval = setInterval(() => {\n            countdown--;\n            timer.text(countdown);\n\n            if (countdown === 0) {\n              clearInterval(interval);\n              handleRedirect();\n            }\n          }, 1000);\n        }, 0);\n\n        // Track\n        logMixpanel('Default Scheduler - Meeting booked!', data);\n      },\n    };\n\n    window.DefaultSDK.submit(data, options);\n  }\n\n  function waitForDefaultSdk(timeout = 60000) {\n    return new Promise((resolve) => {\n      const startTime = Date.now();\n\n      const checkStatus = () => {\n        if (defaultSdkComplete || Date.now() - startTime > timeout) {\n          resolve();\n        } else {\n          setTimeout(checkStatus, 100);\n        }\n      };\n\n      checkStatus();\n    });\n  }\n\n  //#endregion\n\n  // #region multistep\n  function initMultistep() {\n    function initGoalFlows() {\n      // Remove is-active class from all labels on page load\n      $(document).ready(function () {\n        $('.goals-screen input[name=\"goals\"]').closest('label').removeClass('is-active');\n      });\n\n      // Use click handler\n      $(document).on('click', '.goals-screen input[name=\"goals\"]', function (event) {\n        // Get the selected value\n        const selectedValue = $(this).val();\n\n        // Remove is-active class from all labels and add it to the clicked one\n        $('.goals-screen input[name=\"goals\"]').closest('label').removeClass('is-active');\n        $(this).closest('label').addClass('is-active');\n\n        // Handle the heading update\n        var screen2_heading = $('#screen2_heading');\n        if (selectedValue === 'All of the above') {\n          screen2_heading.html(\n            'Good news! Restaurants see online sales grow by up to <span class=\"text-color-brand\">$8k</span> per month and reduce costs by up to <span class=\"text-color-brand\">$2k</span> per month with Owner'\n          );\n        } else if (selectedValue === 'Reduce my costs') {\n          screen2_heading.html(\n            'Good news! Restaurants see costs reduce by up to <span class=\"text-color-brand\">$2k</span> per month with Owner'\n          );\n        } else {\n          screen2_heading.html(\n            'Good news! Restaurants see online sales grow by up to <span class=\"text-color-brand\">$8k</span> per month with Owner'\n          );\n        }\n\n        // Navigate to next screen\n        if (nextBtn) {\n          nextBtn.click();\n        }\n      });\n\n      // Remove the change handler completely to avoid double-firing\n      $(document).off('change', '.goals-screen input[name=\"goals\"]');\n    }\n\n    // Elements\n    const steps = document.querySelectorAll('[class*=\"step-\"]');\n    const prevBtn = document.querySelector('[data-form=\"back-btn\"]');\n    const nextBtn = document.querySelector('[data-form=\"next-btn\"]');\n    const submitBtn = document.querySelector('[data-form=\"multi-submit-btn\"]');\n\n    if (!steps.length) return;\n\n    const progressbar = document.querySelector('.progressbar-left');\n    const form = document.getElementById('wf-form-email-form-v2');\n    const hearSelect = document.getElementById('Hear');\n\n    let currentStep = 0;\n\n    // Update step visibility\n    function updateSteps(direction = 'next') {\n      const wrapper = document.querySelector('.all-screens');\n\n      if (wrapper) wrapper.style.overflow = 'hidden';\n\n      steps.forEach((step, index) => {\n        step.classList.remove(\n          'step-hide',\n          'step-active',\n          'step-slide',\n          'step-enter-left',\n          'step-enter-right'\n        );\n\n        if (index === currentStep) {\n          step.classList.add('step-slide', 'step-active');\n          step.classList.add(direction === 'next' ? 'step-enter-right' : 'step-enter-left');\n\n          void step.offsetWidth;\n\n          step.classList.remove('step-enter-left', 'step-enter-right');\n\n          setTimeout(() => {\n            if (wrapper) wrapper.style.overflow = 'visible';\n          }, 400);\n        } else {\n          step.classList.add('step-hide');\n        }\n      });\n\n      const isFirstStep = currentStep === 0;\n      const isFinalStep = currentStep === steps.length - 1;\n\n      progressbar.style.display = isFirstStep ? 'none' : 'flex';\n      nextBtn.style.display = isFirstStep || isFinalStep ? 'none' : 'flex';\n      prevBtn.style.display = isFirstStep ? 'none' : 'flex';\n\n      // Remove existing continue-* classes and add current step class\n      nextBtn.className = nextBtn.className.replace(/continue-\\d+/g, '');\n      nextBtn.classList.add(`continue-${currentStep}`);\n\n      updateProgress();\n    }\n\n    // Progress bar steps\n    function updateProgress() {\n      const progressItems = document.querySelectorAll('.progressbar__item-2');\n      progressItems.forEach((item, index) => {\n        // item.classList.toggle('active-bar', index === currentStep);\n        item.classList.toggle('active-bar', index <= currentStep);\n      });\n    }\n\n    // Event: next step\n    nextBtn?.addEventListener('click', async function () {\n      if (currentStep < steps.length - 1) {\n        const isValid = internalValidation($(steps[currentStep]));\n        if (isValid) {\n          currentStep++;\n          updateSteps('next');\n        }\n      }\n    });\n\n    submitBtn?.addEventListener('click', async function () {\n      let qualification = await processQualification();\n\n      for (let i = 0; i < steps.length; i++) {\n        const invalidFields = $(steps[i])\n          .find('[field-validation]')\n          .filter(function () {\n            return $(this).css('display') === 'block';\n          });\n\n        if (invalidFields.length > 0) {\n          toggleLoader(false);\n          currentStep = i;\n          updateSteps('back');\n          break;\n        }\n      }\n\n      if (qualification) {\n        capturedFormData = scrapeFormFields();\n\n        hsForm[0].submit();\n        $('.last-button').hide();\n      } else {\n        toggleLoader(false);\n      }\n    });\n\n    // Event: prev step\n    prevBtn?.addEventListener('click', function () {\n      if (currentStep > 0) {\n        currentStep--;\n        updateSteps('prev');\n      }\n    });\n\n    // Initialize\n    $(document).ready(function () {\n      initGoalFlows();\n      updateSteps();\n    });\n  }\n  initMultistep();\n  // #endregion\n});\n"],
  "mappings": "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",
  "names": ["radioContainer", "data", "calculateEMRR", "replaceMeetingEmbed", "question", "finalValue", "timer"]
}
