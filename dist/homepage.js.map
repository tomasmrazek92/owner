{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/globals.js", "../src/utils/swipers.js", "../src/homepage.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "export const setInputElementValue = (elementName, value) => {\n  $(`input[name=${elementName}]`).val(value);\n};\n\n// --- Hero Video\n\nexport const heroVideo = () => {\n  let video = $('#hero-video')[0];\n\n  $('.n_hero-video_thumb').click(function (e) {\n    e.stopPropagation(); // Prevent event propagation to avoid conflicts\n    if (video.paused) {\n      video.play();\n    }\n    $(this).hide();\n  });\n};\n", "export const swipers = [];\n\nexport const createSwiper = (componentSelector, swiperSelector, classSelector, options) => {\n  // Globals\n  const arrows = '.slider-arrow';\n  const pagination = '.swiper-navigation';\n  // For Each\n  $(componentSelector).each(function () {\n    // Tag Instance\n    let index = $(this).index();\n    let instanceClass = `${classSelector}_${index}`;\n    $(this).find(swiperSelector).addClass(instanceClass);\n    $(this).find(arrows).addClass(instanceClass);\n    $(this).find(pagination).addClass(instanceClass);\n\n    // Build Options\n    let swiperOptions = Object.assign({}, options, {\n      speed: 250,\n      navigation: {\n        prevEl: `${arrows}.prev.${instanceClass}`,\n        nextEl: `${arrows}.next.${instanceClass}`,\n      },\n      pagination: {\n        el: `${pagination}.${instanceClass}`,\n        type: 'bullets',\n        bulletActiveClass: 'w-active',\n        bulletClass: 'w-slider-dot',\n      },\n    });\n\n    // Update Options\n    for (let key in options) {\n      if (key in swiperOptions) {\n        swiperOptions[key] = options[key];\n      }\n    }\n\n    // Init Slider\n    let swiper = new Swiper(`${swiperSelector}.${instanceClass}`, swiperOptions);\n\n    // Push to Global for possible references\n    // store swiper instance in object using classSelector as key\n    swipers[classSelector] = swipers[classSelector] || {};\n    swipers[classSelector][index] = swiper;\n  });\n};\n", "import { heroVideo } from '$utils/globals';\nimport { createSwiper, swipers } from '$utils/swipers';\n\n$(document).ready(() => {\n  // --- Hero Video\n  heroVideo();\n\n  // // --- Hero Slider\n  // createSwiper('.n_testimonials', '.n_testimonials-content', 'hp-testimonials', {\n  //   slidesPerView: 'auto',\n  //   spaceBetween: 32,\n  //   effect: 'fade',\n  //   fadeEffect: {\n  //     crossFade: true,\n  //   },\n  //   on: {\n  //     init: () => {\n  //       $('.n_testimonials-nav_item').eq(0).addClass('active');\n  //     },\n  //     slideChange: function () {\n  //       let currentIndex = this.activeIndex;\n  //       navigationItems.removeClass('active');\n  //       navigationItems.eq(currentIndex).addClass('active');\n  //     },\n  //   },\n  // });\n\n  // let heroSlider = swipers['hp-testimonials'][0];\n\n  // // Navigation\n  // let navigationItems = $('.n_testimonials-nav_item');\n\n  // // Navigation Click\n  // navigationItems.on('click', function () {\n  //   let index = $(this).closest('.w-dyn-item').index();\n  //   heroSlider.slideTo(index);\n  // });\n\n  // --- Feature Slider\n  let featureSection = '.n_section-hp-slider';\n  let progressBar = $('.hp-slider_nav-progress');\n  const duration = 5000;\n  let progress = true;\n  let isInView = false;\n\n  // Set the Slider when it gets into view\n  const observer = new IntersectionObserver((entries) => {\n    entries.forEach((entry) => {\n      if (entry.target === $(featureSection)[0]) {\n        if (entry.isIntersecting) {\n          createSwiper(featureSection, '.hp-slider_slider', 'hp-features', {\n            slidersPerView: 'auto',\n            spaceBetween: -160,\n            loop: true,\n            autoplay: {\n              delay: duration,\n            },\n            on: {\n              init: function () {\n                initProgressBar();\n              },\n              slideChange: function () {\n                updateTitle(this);\n                progressBar.stop().css('width', '0%');\n              },\n              slideChangeTransitionStart: function () {\n                initProgressBar();\n              },\n            },\n          });\n\n          isInView = true;\n\n          // Disconnect the observer after the first intersection\n          observer.disconnect();\n        }\n      }\n    });\n  });\n\n  // Observe the featureSlider element\n  observer.observe($(featureSection)[0]);\n\n  let featuresSliders = null; // Will be set when the slider is created and initialized\n\n  function updateTitle(swiperInstance) {\n    let activeSlide = swiperInstance.slides[swiperInstance.activeIndex];\n    let title = $(activeSlide).find('.hp-slider_slide').attr('data-title');\n\n    $('.hp-slider_nav-box_inner [data-title]').text(title);\n  }\n\n  // Progress Bar\n  function stopProgressBar() {\n    progress = false;\n    progressBar.stop();\n  }\n\n  function initProgressBar() {\n    if (progress) {\n      progressBar.stop().animate({ width: '100%' }, duration);\n    }\n  }\n});\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,iCAAsB,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACMtF,MAAM,YAAY,MAAM;AAC7B,QAAI,QAAQ,EAAE,aAAa,EAAE,CAAC;AAE9B,MAAE,qBAAqB,EAAE,MAAM,SAAU,GAAG;AAC1C,QAAE,gBAAgB;AAClB,UAAI,MAAM,QAAQ;AAChB,cAAM,KAAK;AAAA,MACb;AACA,QAAE,IAAI,EAAE,KAAK;AAAA,IACf,CAAC;AAAA,EACH;;;AChBO,MAAM,UAAU,CAAC;AAEjB,MAAM,eAAe,CAAC,mBAAmB,gBAAgB,eAAe,YAAY;AAEzF,UAAM,SAAS;AACf,UAAM,aAAa;AAEnB,MAAE,iBAAiB,EAAE,KAAK,WAAY;AAEpC,UAAI,QAAQ,EAAE,IAAI,EAAE,MAAM;AAC1B,UAAI,gBAAgB,GAAG,iBAAiB;AACxC,QAAE,IAAI,EAAE,KAAK,cAAc,EAAE,SAAS,aAAa;AACnD,QAAE,IAAI,EAAE,KAAK,MAAM,EAAE,SAAS,aAAa;AAC3C,QAAE,IAAI,EAAE,KAAK,UAAU,EAAE,SAAS,aAAa;AAG/C,UAAI,gBAAgB,OAAO,OAAO,CAAC,GAAG,SAAS;AAAA,QAC7C,OAAO;AAAA,QACP,YAAY;AAAA,UACV,QAAQ,GAAG,eAAe;AAAA,UAC1B,QAAQ,GAAG,eAAe;AAAA,QAC5B;AAAA,QACA,YAAY;AAAA,UACV,IAAI,GAAG,cAAc;AAAA,UACrB,MAAM;AAAA,UACN,mBAAmB;AAAA,UACnB,aAAa;AAAA,QACf;AAAA,MACF,CAAC;AAGD,eAAS,OAAO,SAAS;AACvB,YAAI,OAAO,eAAe;AACxB,wBAAc,GAAG,IAAI,QAAQ,GAAG;AAAA,QAClC;AAAA,MACF;AAGA,UAAI,SAAS,IAAI,OAAO,GAAG,kBAAkB,iBAAiB,aAAa;AAI3E,cAAQ,aAAa,IAAI,QAAQ,aAAa,KAAK,CAAC;AACpD,cAAQ,aAAa,EAAE,KAAK,IAAI;AAAA,IAClC,CAAC;AAAA,EACH;;;AC1CA,IAAE,QAAQ,EAAE,MAAM,MAAM;AAEtB,cAAU;AAkCV,QAAI,iBAAiB;AACrB,QAAI,cAAc,EAAE,yBAAyB;AAC7C,UAAM,WAAW;AACjB,QAAI,WAAW;AACf,QAAI,WAAW;AAGf,UAAM,WAAW,IAAI,qBAAqB,CAAC,YAAY;AACrD,cAAQ,QAAQ,CAAC,UAAU;AACzB,YAAI,MAAM,WAAW,EAAE,cAAc,EAAE,CAAC,GAAG;AACzC,cAAI,MAAM,gBAAgB;AACxB,yBAAa,gBAAgB,qBAAqB,eAAe;AAAA,cAC/D,gBAAgB;AAAA,cAChB,cAAc;AAAA,cACd,MAAM;AAAA,cACN,UAAU;AAAA,gBACR,OAAO;AAAA,cACT;AAAA,cACA,IAAI;AAAA,gBACF,MAAM,WAAY;AAChB,kCAAgB;AAAA,gBAClB;AAAA,gBACA,aAAa,WAAY;AACvB,8BAAY,IAAI;AAChB,8BAAY,KAAK,EAAE,IAAI,SAAS,IAAI;AAAA,gBACtC;AAAA,gBACA,4BAA4B,WAAY;AACtC,kCAAgB;AAAA,gBAClB;AAAA,cACF;AAAA,YACF,CAAC;AAED,uBAAW;AAGX,qBAAS,WAAW;AAAA,UACtB;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAGD,aAAS,QAAQ,EAAE,cAAc,EAAE,CAAC,CAAC;AAErC,QAAI,kBAAkB;AAEtB,aAAS,YAAY,gBAAgB;AACnC,UAAI,cAAc,eAAe,OAAO,eAAe,WAAW;AAClE,UAAI,QAAQ,EAAE,WAAW,EAAE,KAAK,kBAAkB,EAAE,KAAK,YAAY;AAErE,QAAE,uCAAuC,EAAE,KAAK,KAAK;AAAA,IACvD;AAGA,aAAS,kBAAkB;AACzB,iBAAW;AACX,kBAAY,KAAK;AAAA,IACnB;AAEA,aAAS,kBAAkB;AACzB,UAAI,UAAU;AACZ,oBAAY,KAAK,EAAE,QAAQ,EAAE,OAAO,OAAO,GAAG,QAAQ;AAAA,MACxD;AAAA,IACF;AAAA,EACF,CAAC;",
  "names": []
}
