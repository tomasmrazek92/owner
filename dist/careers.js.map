{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/swipers.js", "../src/careers.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "export const swipers = [];\n\nexport const createSwiper = (componentSelector, swiperSelector, classSelector, options) => {\n  // Globals\n  const arrows = '.swiper_arrow';\n  const pagination = '.swiper-navigation';\n  // For Each\n  $(componentSelector).each(function () {\n    // Tag Instance\n    let index = $(this).index();\n    let instanceClass = `${classSelector}_${index}`;\n    $(this).find(swiperSelector).addClass(instanceClass);\n    $(this).find(arrows).addClass(instanceClass);\n    $(this).find(pagination).addClass(instanceClass);\n\n    // Build Options\n    let swiperOptions = Object.assign({}, options, {\n      speed: 250,\n      navigation: {\n        prevEl: `${arrows}.prev.${instanceClass}`,\n        nextEl: `${arrows}.next.${instanceClass}`,\n      },\n      pagination: {\n        el: `${pagination}.${instanceClass}`,\n        type: 'bullets',\n        bulletActiveClass: 'w-active',\n        bulletClass: 'w-slider-dot',\n      },\n    });\n\n    // Update Options\n    for (let key in options) {\n      if (key in swiperOptions) {\n        swiperOptions[key] = options[key];\n      }\n    }\n\n    // Init Slider\n    let swiper = new Swiper(`${swiperSelector}.${instanceClass}`, swiperOptions);\n\n    // Push to Global for possible references\n    // store swiper instance in object using classSelector as key\n    swipers[classSelector] = swipers[classSelector] || {};\n    swipers[classSelector][index] = swiper;\n  });\n};\n", "import { createSwiper } from '$utils/swipers';\n\ngsap.registerPlugin(ScrollTrigger);\n\n// --- Hero Slider\nlet careerSlider = $('.n_section-career-team');\n\nif (careerSlider) {\n  createSwiper(careerSlider, '.swiper.n_team-swiper', 'career-slider', {\n    slidesPerView: 'auto',\n    spaceBetween: 32,\n  });\n}\n\n// --- Hero Parallax\nlet distance;\nlet heroParallax = gsap.timeline({\n  scrollTrigger: {\n    trigger: $('.n_section-career-center'),\n    start: 'top top',\n    end: 'bottom top',\n    scrub: 1,\n  },\n});\n\n$('.n_career-hero_visual-wrap').each(function () {\n  if ($(this).hasClass('small')) {\n    distance = '-18rem';\n  } else if ($(this).hasClass('middle')) {\n    distance = '-15rem';\n  } else if ($(this).hasClass('big')) {\n    distance = '-10rem';\n  }\n\n  heroParallax.to(\n    $(this),\n    {\n      y: distance,\n      stagger: {\n        each: 0.5,\n      },\n    },\n    '<'\n  );\n});\n\nconsole.log(heroParallax);\n\n// -- Text Scroll Fill\nlet typeSplit;\n// Split the text up\nfunction runSplit() {\n  typeSplit = new SplitType('[scroll-text]', {\n    types: 'words',\n  });\n\n  createAnimation();\n}\n\nrunSplit();\n\n// Update on window resize\nlet windowWidth = $(window).innerWidth();\nwindow.addEventListener('resize', function () {\n  if (windowWidth !== $(window).innerWidth()) {\n    windowWidth = $(window).innerWidth();\n    typeSplit.revert();\n    runSplit();\n  }\n});\n\nfunction createAnimation() {\n  $('.word').each(function () {\n    let tl = gsap.timeline({\n      scrollTrigger: {\n        trigger: $(this),\n        start: 'top 50%',\n        end: 'bottom bottom',\n        scrub: 0.1,\n      },\n    });\n    tl.to($(this), {\n      color: '#000',\n      stagger: {\n        each: 0.5,\n      },\n    });\n  });\n}\n"],
  "mappings": "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",
  "names": []
}
