{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/globals.js", "../src/utils/localStorage.js", "../src/utils/googlePlace.js", "../src/utils/formValidations.js", "../src/utils/hubspotLogic.js", "../src/demo-test.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "export const setInputElementValue = (elementName, value) => {\n  $(`input[name=${elementName}]`).val(value);\n};\n\nexport const getInputElementValue = (elementName) => {\n  return $(`input[name=${elementName}]`).val();\n};\n// --- VideoPlay\n\nexport const videoPlay = () => {\n  const vimeoboxes = $('[vimeo-btn]');\n  const modal = $('.n_vimeo-lightbox');\n  const iframe = modal.find('iframe').get(0); // get DOM element from jQuery object\n\n  let player = null;\n\n  const initializePlayer = (vimeoLink) => {\n    if (player) {\n      player.unload().catch(console.error);\n    }\n\n    // Set iframe src\n    iframe.src = vimeoLink;\n\n    // Listen for iframe to load\n    iframe.addEventListener('load', function () {\n      player = new Vimeo.Player(iframe);\n      player.play().catch(console.error);\n    });\n  };\n\n  const cleanupPlayer = () => {\n    if (player) {\n      player\n        .pause()\n        .then(() => player.unload())\n        .catch(console.error);\n      iframe.src = '';\n    }\n  };\n\n  if (vimeoboxes.length > 0) {\n    vimeoboxes.on('click', function () {\n      const vimeoLink = $(this).attr('vimeo-url');\n      if (vimeoLink) {\n        initializePlayer(vimeoLink);\n      }\n    });\n\n    modal.children().not('.w-embed').on('click', cleanupPlayer);\n  }\n};\n\nexport const heroVideo = () => {\n  $('[hero-video-thumb]').click(function (e) {\n    let allVideos = $('[hero-video]');\n    let video = $(this).closest('[hero-video-box]').find('[hero-video]')[0];\n    e.stopPropagation();\n\n    // Pause all expect the new one\n    allVideos.not(video).each(function () {\n      $(this)[0].pause();\n    });\n\n    if (video.paused) {\n      video.play();\n    }\n    $(this).hide();\n  });\n};\n", "// localStorage.js\nexport const getItem = (key) => {\n  const value = localStorage.getItem(key);\n  try {\n    return JSON.parse(value);\n  } catch (error) {\n    return value;\n  }\n};\n\nexport const setItem = (key, value) => {\n  const serializedValue = typeof value === 'object' ? JSON.stringify(value) : value;\n  localStorage.setItem(key, serializedValue);\n};\n", "import { toggleValidationMsg } from '$utils/formValidations';\nimport { setInputElementValue } from '$utils/globals';\nimport { getItem, setItem } from '$utils/localStorage';\n\nconst restaurantObject = 'restaurant';\n\nconst setAddressComponents = (googlePlace, componentForm) => {\n  let route = '';\n  let streetNumber = '';\n\n  googlePlace.address_components.forEach((component) => {\n    const addressType = component.types[0];\n    const type = componentForm.address_components[addressType];\n\n    if (type) {\n      const val = component[type];\n      if (addressType === 'route') route = val;\n      else if (addressType === 'street_number') streetNumber = val;\n      else setInputElementValue(addressType, val);\n    }\n  });\n\n  setInputElementValue('restaurant-address', `${streetNumber} ${route}`);\n};\n\nconst setTypes = (googlePlace) => {\n  if (!googlePlace.types) return;\n  const typesAsString = googlePlace.types.join(', ');\n  setInputElementValue('place_types', typesAsString);\n};\n\nconst setOtherComponents = (googlePlace, componentForm) => {\n  Object.keys(componentForm).forEach((key) => {\n    if (key === 'address_components') return;\n    const value = googlePlace[key];\n    if (value) setInputElementValue(key, value);\n  });\n};\n\nconst setGooglePlaceDataToForm = (googlePlace) => {\n  if (!googlePlace) return;\n\n  const componentForm = {\n    name: '',\n    international_phone_number: '',\n    website: '',\n    place_id: '',\n    url: '',\n    rating: '',\n    user_ratings_total: '',\n    address_components: {\n      street_number: 'short_name',\n      route: 'long_name',\n      locality: 'long_name',\n      administrative_area_level_1: 'short_name',\n      country: 'short_name',\n      postal_code: 'short_name',\n    },\n  };\n\n  setAddressComponents(googlePlace, componentForm);\n  setTypes(googlePlace);\n  setOtherComponents(googlePlace, componentForm);\n};\n\nconst initGooglePlaceAutocomplete = () => {\n  const googlePlaceFromStorage = getItem(restaurantObject);\n  if (googlePlaceFromStorage) {\n    setGooglePlaceDataToForm(googlePlaceFromStorage);\n    setInputElementValue('restaurant-name', getItem('restaurant-value'));\n  }\n\n  const gpaOptions = {};\n\n  $('input[name=\"restaurant-name\"]').each(function () {\n    const autocomplete = new google.maps.places.Autocomplete(this, gpaOptions);\n    const self = $(this);\n\n    autocomplete.addListener('place_changed', function () {\n      console.log('place-changed');\n      const place = autocomplete.getPlace();\n      const value = self.val();\n\n      // Reset Val\n      toggleValidationMsg(self, false, $(self).attr('base-text'));\n\n      // Set Content\n      setGooglePlaceDataToForm(place);\n      setItem('restaurant-value', value);\n      setItem(restaurantObject, place);\n      setInputElementValue('restaurant-name', getItem('restaurant-value'));\n    });\n  });\n};\n\nconst checkIfRestaurant = () => {\n  // Parse the localStorage object into a JavaScript object\n  const placeObject = JSON.parse(localStorage.getItem(restaurantObject));\n\n  // Check if the types array includes at least one of the valid types\n  const validTypes = ['bar', 'cafe', 'bakery', 'food', 'restaurant'];\n  for (let i = 0; i < validTypes.length; i++) {\n    if (placeObject.types.includes(validTypes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport {\n  checkIfRestaurant,\n  initGooglePlaceAutocomplete,\n  restaurantObject,\n  setGooglePlaceDataToForm,\n};\n", "import { checkIfRestaurant } from '$utils/googlePlace';\n\n// Email Validation\nfunction validateEmail(input) {\n  const emailReg = /^([\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4})?$/;\n  const isValid = emailReg.test($(input).val());\n  toggleValidationMsg($(input), !isValid, 'Please fill correct email address.');\n\n  return isValid;\n}\n\n// Validate Google Place\nfunction validateGooglePlace(input) {\n  let isValid = true;\n\n  isValid = checkPlaceType(input);\n\n  return isValid;\n}\n\n// Validate CheckPlaceType\nlet hasRun = false;\nfunction checkPlaceType(input) {\n  if (hasRun) {\n    hasRun = false;\n    return true;\n  }\n\n  let isValid = checkIfRestaurant();\n\n  if (!isValid) {\n    toggleValidationMsg(\n      $(input),\n      true,\n      'Are you sure this is correct? Please update your entry to a recognized restaurant.'\n    );\n  } else {\n    toggleValidationMsg($(input), false);\n  }\n\n  hasRun = true;\n  return isValid;\n}\n\n// Validate Selects\nfunction validateSelect(input) {\n  let select;\n\n  // Check for custom selects\n  let searchSelect = $(input).siblings('.select2');\n  let niceSelect = $(input).siblings('.nice-select');\n  if (searchSelect) {\n    select = searchSelect.find('.select2-selection--single');\n  } else if (niceSelect) {\n    select = $(niceSelect);\n  } else {\n    select = $(input);\n  }\n\n  let isValid = true;\n\n  if ($(input).val() === '') {\n    validArr.push(selectVal);\n    $(select).addClass('is-invalid');\n    isValid = false;\n  } else {\n    $(select).removeClass('is-invalid');\n  }\n\n  return isValid;\n}\n\n// Validate Other Inputs\nfunction validateOtherInputs(input) {\n  toggleValidationMsg($(input), false);\n  return true;\n}\n\n// Hangle Empty Inputs\nfunction handleEmptyRequiredInput(input) {\n  if ($(input).attr('name') === 'restaurant-name') {\n    toggleValidationMsg(\n      $(input),\n      true,\n      'Please select a business location from the search results.'\n    );\n  }\n  toggleValidationMsg($(input), true);\n  return false;\n}\n\n// Input Validation\nexport const validateInput = (element) => {\n  let input = element;\n  let isValidAll = true;\n\n  if ($(input).prop('required')) {\n    if ($(input).val()) {\n      if ($(input).is('[type=\"email\"]')) {\n        isValidAll = validateEmail(input);\n      } else if ($(input).attr('name') === 'restaurant-name') {\n        isValidAll = validateGooglePlace(input);\n      } else if ($(input).is('select')) {\n        isValidAll = validateSelect(input);\n      } else {\n        isValidAll = validateOtherInputs(input);\n      }\n    } else {\n      isValidAll = handleEmptyRequiredInput(input);\n    }\n  }\n  if (!isValidAll) {\n    $(input).addClass('error');\n  } else {\n    toggleValidationMsg($(input), false);\n  }\n\n  return isValidAll;\n};\n\n// Show/Hide Validation Message\nexport const toggleValidationMsg = (element, condition, msg) => {\n  const validation = $(element)\n    .closest('.form-field-wrapper, [field-wrapper]')\n    .find('.field-validation, [field-validation]');\n  const formField = $(element).closest('.form-field, [form-field]');\n\n  formField.toggleClass('error', condition);\n  validation.toggle(condition);\n  if (msg) {\n    validation.text(msg);\n  }\n};\n\n// Check for Checkboxes and Radio Buttons\nexport const validateCheckboxRadio = (elements) => {\n  if (!elements.length) return true;\n\n  const atLeastOneChecked = elements.is(':checked');\n  const firstGroupItem = elements.first();\n  const closestWrapper = firstGroupItem.closest('.form-field-wrapper');\n\n  if (!atLeastOneChecked) {\n    toggleValidationMsg(closestWrapper, true);\n    return false;\n  }\n  toggleValidationMsg(closestWrapper, false);\n  return true;\n};\n\n// Validation Flag\nexport const validationCalled = new Set();\n", "// --- Fill HubSpot Forms\nexport const fillHubSpot = (formElement, hsform, mapping) => {\n  var $form = $(formElement);\n  var hsform = $(hsform);\n\n  // Collect data from the form\n  Object.keys(mapping).forEach(function (sourceInputName) {\n    var targetInputNames = mapping[sourceInputName];\n    // Look for Input\n    var $sourceInput = $form.find(\n      'input[name=\"' + sourceInputName.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&') + '\"]'\n    );\n    // Otherwise look for select\n    if ($sourceInput.length === 0) {\n      $sourceInput = $form.find(\n        'select[name=\"' + sourceInputName.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&') + '\"]'\n      );\n    }\n    var inputValue = $sourceInput.val();\n\n    // If targetInputNames is not an array, wrap it in an array\n    if (!Array.isArray(targetInputNames)) {\n      targetInputNames = [targetInputNames];\n    }\n\n    // Set the values for the target form (hsform)\n    targetInputNames.forEach(function (targetInputName) {\n      var targetInput = hsform.find(\n        'input[name=' + targetInputName.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&') + ']'\n      );\n\n      // Check if Checkbox\n      if (targetInput.attr('type') === 'checkbox') {\n        if (String(inputValue).toLowerCase() === 'true') {\n          targetInput.prop('checked', true);\n        } else {\n          targetInput.prop('checked', false);\n        }\n      } else if (hasMatchingSibling(targetInput, '.hs-datepicker')) {\n        targetInput.siblings('input[readonly]').val(inputValue).change();\n      } else {\n        targetInput.val(inputValue);\n      }\n\n      // Perform focus and blur actions for required items\n      if (['phone', 'mobilephone', 'email', 'pred_gmv'].includes(targetInputName)) {\n        targetInput.get(0).focus({ preventScrol: true });\n        targetInput.get(0).blur();\n      }\n    });\n  });\n};\n\n// --- Mirror HubSpot Error Messages ---\nexport const mirrorHS = (hsform) => {\n  let isError = false;\n\n  // HS Phone\n  var hsPhoneVal = hsform\n    .find('input[name=mobilephone]')\n    .parent()\n    .siblings('.hs-error-msgs')\n    .find('.hs-error-msg')\n    .text();\n  var gtPhoneVal = $('input[name=\"cellphone\"]')\n    .closest('[field-wrapper]')\n    .find('[field-validation]');\n  if (hsPhoneVal) {\n    isError = true;\n    gtPhoneVal.text(hsPhoneVal);\n    gtPhoneVal.show();\n  } else {\n    gtPhoneVal.hide();\n  }\n\n  // HS Email\n  var hsEmailVal = hsform\n    .find('input[name=email]')\n    .closest('.hs-fieldtype-text')\n    .find('.hs-error-msgs')\n    .find('.hs-error-msg')\n    .text();\n  var gtEmail = $('input[name=\"email\"]').closest('[field-wrapper]').find('[field-validation]');\n  if (hsEmailVal) {\n    gtEmail.text(hsEmailVal);\n    gtEmail.show();\n    isError = true;\n  } else {\n    gtEmail.hide();\n  }\n  return isError;\n};\n\n// --- Locate Hubspot Forms\n// Function 1: Callback for onFormReady\nexport function onFormReadyCallback(form) {\n  // Resolve the promise with the located form\n  formReadyPromiseResolver(form);\n}\n\n// Function 2: Waits for function 1 to be executed and return the form\nexport function waitForFormReady() {\n  return new Promise(function (resolve) {\n    formReadyPromiseResolver = resolve;\n  });\n}\n\n// Hahdle Errors and submit form\nexport const handleHubspotForm = (form) => {\n  // Elems\n  const button = $('[data-form=\"submit-btn\"]');\n\n  // Validation\n  let isError;\n\n  // Button States\n  const disableButton = () => {\n    button.addClass('disabled');\n  };\n  const enableButton = () => {\n    button.removeClass('disabled');\n  };\n\n  toggleLoader(true);\n  disableButton();\n\n  // Fallback for Hubspot Validation to happen\n  setTimeout(() => {\n    // Run the Validation and stop the animation\n    isError = mirrorHS(form);\n    enableButton();\n\n    // Check condition and submit the form otherwise\n    if (!isError) {\n      form.find('input[type=submit]').trigger('click');\n    } else {\n      toggleLoader(false);\n    }\n  }, 3000);\n};\n\n// Show loading state\nexport function toggleLoader(condition) {\n  const loader = $('.n_demo-form_loading');\n\n  if (condition) {\n    loader.find('[data-animation-type=\"lottie\"]').trigger('click');\n    loader.fadeIn();\n  } else {\n    loader.hide();\n  }\n}\n\n// Declare formReadyPromiseResolver variable\nlet formReadyPromiseResolver;\n\n// Check for sibling\nfunction hasMatchingSibling(inputElement, selector) {\n  // Ensure inputElement is a jQuery object and extract the first DOM element\n  const domElement = inputElement[0] || inputElement.get(0);\n  if (!domElement) {\n    return false;\n  }\n\n  const { parentNode } = domElement;\n  if (!parentNode) {\n    return false;\n  }\n\n  return Array.from(parentNode.children).some((sib) => sib !== domElement && sib.matches(selector));\n}\n", "import { validateInput } from '$utils/formValidations';\nimport { getInputElementValue, setInputElementValue } from '$utils/globals';\nimport {\n  fillHubSpot,\n  handleHubspotForm,\n  onFormReadyCallback,\n  toggleLoader,\n  waitForFormReady,\n} from '$utils/hubspotLogic';\nimport { getItem, setItem } from '$utils/localStorage';\n\n$(document).ready(() => {\n  // Qualification Variable\n  let qualified;\n\n  // #region Functions\n\n  // store Restaurant\n  const getRestaurant = () => {\n    let restaurant = getItem('restaurant');\n\n    return restaurant;\n  };\n\n  // Qualification Flow Divider\n  function checkQualification() {\n    return new Promise((resolve, reject) => {\n      try {\n        let restaurant = getRestaurant();\n\n        // Resetting the flag\n        qualified = undefined;\n\n        // Conditions\n        let isOwner = $('select[name=\"person-type\"]').val() === \"I'm a restaurant owner or manager\";\n        let multipleLocations = $('input[name=\"number-of-locations\"]').val() > 1;\n        let isUS = restaurant.address_components.some((component) => component.short_name === 'US');\n\n        // Action A - Instantly follow to the meeting link - Qualified\n        if (isOwner && multipleLocations) {\n          qualified = true;\n        }\n\n        // Action B - Instantly follow to success link - Unqualified\n        if (!isOwner || !isUS) {\n          qualified = false;\n        }\n\n        resolve(); // Resolve the promise after evaluation\n      } catch (error) {\n        reject(error); // Reject the promise if an error occurs\n      }\n    });\n  }\n\n  // Qualification API Call\n  function callQualification() {\n    let restaurant = getRestaurant();\n    let data = {\n      name: restaurant.name,\n      address: restaurant.formatted_address,\n      website: restaurant.website,\n      email: 'jonathan@owner.com',\n      token: 'AJXuyxPXgGF68NMv',\n      sfdc_id: 'None',\n    };\n    let response;\n\n    function callApi(data) {\n      return new Promise((resolve, reject) => {\n        $.ajax({\n          url: 'https://owner-ops.net/business-info/',\n          type: 'POST',\n          contentType: 'application/json',\n          dataType: 'json',\n          data: JSON.stringify(data),\n          timeout: 15000,\n          success: function (response) {\n            resolve(response);\n          },\n          error: function (xhr, status, error) {\n            if (status === 'timeout') {\n              console.log('Error occurred:', error);\n              setInputElementValue('execution_time_seconds', 15);\n              setInputElementValue('gmv_pred', 0);\n              resolve('');\n            } else {\n              console.log('Error occurred:', error);\n              resolve('');\n            }\n          },\n        });\n      });\n    }\n\n    // Usage\n    return callApi(data)\n      .then((response) => {\n        console.log(response);\n        return response[0]; // Return the response directly\n      })\n      .catch((error) => {\n        console.error('Error:', error); // Log or handle error as needed\n        return false; // Return false on error\n      });\n  }\n\n  // Fill data from API\n  function fillFormWithMatchingData(apiData, flag) {\n    const inputs = $('#demo-form input');\n    const allowedKeys = [\n      'brizo_id',\n      'base_enrich_date',\n      'inbound_add_to_cadence',\n      'execution_time_seconds',\n      'auto_dq_flag',\n      'auto_dq_reason',\n      'gmv_pred',\n      'inbound_add_to_cadence',\n    ];\n\n    // Flag = We run this only when the apiCall runned\n    if (flag) {\n      inputs.each(function () {\n        const inputName = $(this).attr('name');\n        // Check if the input's name matches any key in the API data\n        if (allowedKeys.includes(inputName) && apiData.hasOwnProperty(inputName)) {\n          var value = apiData[inputName];\n          if (typeof value === 'number' || (!isNaN(value) && !isNaN(parseFloat(value)))) {\n            $(this).val(Number(value).toFixed(2));\n          } else {\n            $(this).val(value);\n          }\n        }\n      });\n    } else {\n      fillStaticAPIFields(false);\n    }\n  }\n\n  // Validate Fields Internally\n  function internalValidation() {\n    // Global Validate checker\n    let isValid = true;\n\n    // Validate all inputs internally\n    wfForm.find(':input:visible, select').each(function () {\n      let validate = validateInput($(this));\n      isValid = isValid && validate;\n    });\n\n    return isValid;\n  }\n\n  // Fill Custom Fields for the insta flow\n  function fillStaticAPIFields(type) {\n    setInputElementValue('base_enrich_date', new Date().toISOString().slice(0, 10));\n    setInputElementValue('inbound_add_to_cadence', 'true');\n    // Inputs for insta Disqualification\n    if (type) {\n      setInputElementValue('execution_time_seconds', 0);\n      setInputElementValue('auto_dq_flags', 'true');\n    }\n    // Inputs for insta Qualifiation\n    if (type === true) {\n      setInputElementValue('auto_dq_reason', 'none');\n      setInputElementValue('auto_dq_flags', 'false');\n    }\n  }\n\n  function fillCustomFields() {\n    // Some quick input filling\n    setInputElementValue('page_url', window.location.pathname);\n    setInputElementValue('page_lang', $('html').attr('lang'));\n    setInputElementValue(\n      'url',\n      (() => {\n        // Splitting the URL at 'cid=' and taking the second part\n        var restaurant = getRestaurant();\n        var cidLink = restaurant.url;\n        return cidLink.split('cid=')[1];\n      })()\n    );\n  }\n\n  // Run the Qualification Logic\n  async function processQualificationAndForm() {\n    // Validate Fields\n    let validation = internalValidation();\n\n    // Proceed only if validation pass\n    if (validation) {\n      // Show Loader\n      toggleLoader(true);\n\n      try {\n        // Wait for checkQualification to complete\n        await checkQualification();\n\n        // Call API only if InstaQualification is not set\n        if (typeof qualified !== 'boolean') {\n          const result = await callQualification();\n          const dqFlag = result.auto_dq_flag;\n\n          // dgFlag Logic\n          if (typeof dqFlag === 'string') {\n            qualified = result.auto_dq_flag === 'True' ? false : true;\n            fillFormWithMatchingData(result, true);\n          } else {\n            qualified = false;\n            fillFormWithMatchingData(result, false);\n          }\n        } else {\n          fillStaticAPIFields(qualified);\n        }\n      } catch (error) {\n        qualified = false;\n        console.log('Qualification check or call failed:', error);\n      }\n\n      // Proceed\n      fillCustomFields();\n      fillHubSpot(wfForm, hsForm, inputMapping);\n      handleHubspotForm(hsForm);\n    }\n  }\n\n  // Handle Submit\n  function fireSubmit() {\n    processQualificationAndForm();\n  }\n\n  const successSubmit = () => {\n    const success = $('.n_demo-form_success');\n\n    // Toggle Loading\n    toggleLoader(false);\n    wfForm.hide();\n    success.show();\n\n    // Success State flow\n    window.location.href = qualified\n      ? 'https://meetings.hubspot.com/brandon767/sales-inbound-round-robin'\n      : 'https://www.owner.com/funnel-demo-requested';\n  };\n\n  // #endregion\n\n  // #region Flow Logic\n\n  // 1. Define Forms\n  let wfForm = $('#demo-form');\n  let hsForm;\n\n  // 2. Initialize the HubSpot form\n  hbspt.forms.create({\n    portalId: '6449395',\n    formId: 'f3807262-aed3-4b9c-93a3-247ad4c55e60',\n    target: '#hbst-form',\n    onFormReady: onFormReadyCallback,\n    onFormSubmitted: successSubmit,\n  });\n\n  // 3. Wait for hsform to be ready so we can refference it\n  waitForFormReady().then(function (form) {\n    hsForm = $(form);\n  });\n\n  // 4. Mapp all input [wfForm: hsForm]\n  const inputMapping = {\n    name: ['company', '0-2/name'],\n    international_phone_number: ['phone', '0-2/phone'],\n    'restaurant-address': ['address', '0-2/address'],\n    locality: ['city', '0-2/city'],\n    administrative_area_level_1: ['state', '0-2/state'],\n    postal_code: ['zip', '0-2/zip'],\n    country: ['country', '0-2/country'],\n    'first-name': 'firstname',\n    'last-name': 'lastname',\n    cellphone: 'mobilephone',\n    email: 'email',\n    'person-type': 'lead_person_type',\n    website: 'website',\n    place_id: 'place_id',\n    url: 'place_cid',\n    place_types: ['place_types_contact', '0-2/place_types'],\n    rating: 'place_rating',\n    user_ratings_total: 'user_ratings_total',\n    'number-of-locations': 'of_locations_number',\n    hear: 'how_did_you_hear_about_us',\n    page_url: 'last_pdf_download',\n    page_lang: 'page_lang',\n    brizo_id: ['brizo_id', '0-2/brizo_id_account'],\n    base_enrich_date: ['auto_enrich_date', '0-2/auto_enrich_date_company'],\n    inbound_add_to_cadence: 'inbound_add_to_cadence',\n    execution_time_seconds: 'auto_enrich_time',\n    auto_dq_flag: 'auto_dq_static',\n    auto_dq_reason: ['auto_dq_reason', '0-2/auto_dq_reason_company'],\n    gmv_pred: ['pred_gmv', '0-2/pred_gmv_company'],\n\n    // ...\n  };\n\n  // 5. Submit Action\n  $('[data-form=submit-btn]').on('click', fireSubmit);\n\n  // #endregion\n\n  // #region Custom Actions\n\n  // Custom Select\n  $('.nice-select li').on('click', function () {\n    $('.nice-select .current').css('color', 'white');\n  });\n\n  // Condition Logic for input\n  $('select[name=\"person-type\"]').on('change', function () {\n    let val = $(this).val();\n\n    // Show Locations\n    if (val === \"I'm a restaurant owner or manager\") {\n      $('#locations-wrap').show();\n    } else {\n      $('#locations-wrap').hide();\n    }\n  });\n\n  //#endregion\n});\n"],
  "mappings": "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",
  "names": ["data", "response"]
}
